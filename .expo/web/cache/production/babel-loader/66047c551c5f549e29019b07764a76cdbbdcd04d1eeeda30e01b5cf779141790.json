{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{ClockSettingsContext}from'../contexts/ClockSettingsContext';import{useNavigation}from'@react-navigation/native';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PlayerClock=()=>{const{clockOpacity,clockColor}=useContext(ClockSettingsContext);const[currentTime,setCurrentTime]=useState(new Date());const navigation=useNavigation();useEffect(()=>{const timer=setInterval(()=>setCurrentTime(new Date()),500);return()=>clearInterval(timer);},[]);const hours=currentTime.getHours();const minutes=currentTime.getMinutes();const formattedHours=hours<10?`0${hours}`:`${hours}`;const formattedMinutes=minutes<10?`0${minutes}`:`${minutes}`;const[dashVisible,setDashVisible]=useState(true);useEffect(()=>{const dashTimer=setInterval(()=>setDashVisible(prev=>!prev),500);return()=>clearInterval(dashTimer);},[]);return _jsxs(TouchableOpacity,{style:styles.container,onPress:()=>navigation.navigate('SplashScreen'),children:[_jsx(Text,{style:[styles.text,{color:clockColor,opacity:clockOpacity}],children:formattedHours}),_jsx(Text,{style:[styles.text_dash,{color:dashVisible?clockColor:'transparent',opacity:clockOpacity}],children:\"\\u2B24     \\u2B24\"}),_jsx(Text,{style:[styles.text,{color:clockColor,opacity:clockOpacity}],children:formattedMinutes})]});};const styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center',padding:0,paddingBottom:20},text:{fontSize:30,fontFamily:'DSEG7Classic-Bold'},text_dash:{fontSize:9,paddingBottom:6,fontFamily:'DSEG7Classic-Bold',paddingHorizontal:5}});export default PlayerClock;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","StyleSheet","TouchableOpacity","ClockSettingsContext","useNavigation","jsx","_jsx","jsxs","_jsxs","PlayerClock","clockOpacity","clockColor","currentTime","setCurrentTime","Date","navigation","timer","setInterval","clearInterval","hours","getHours","minutes","getMinutes","formattedHours","formattedMinutes","dashVisible","setDashVisible","dashTimer","prev","style","styles","container","onPress","navigate","children","text","color","opacity","text_dash","create","justifyContent","alignItems","padding","paddingBottom","fontSize","fontFamily","paddingHorizontal"],"sources":["/home/orr/GitHub/Dabbetul-Arz/src/components/PlayerClock.js"],"sourcesContent":["/**\n * PlayerClock\n * Компонент для отображения времени в формате HH:MM для плеера.\n * Использует настройки цвета и яркости из ClockSettingsContext.\n * Остальная логика независима от часов в сплаш скрине.\n *\n * @returns {JSX.Element} Элемент часов для плеера.\n */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { ClockSettingsContext } from '../contexts/ClockSettingsContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst PlayerClock = () => {\n  const { clockOpacity, clockColor } = useContext(ClockSettingsContext);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const navigation = useNavigation();\n\n  // Обновляем время каждую секунду\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 500);\n    return () => clearInterval(timer);\n  }, []);\n\n  const hours = currentTime.getHours();\n  const minutes = currentTime.getMinutes();\n  const formattedHours = hours < 10 ? `0${hours}` : `${hours}`;\n  const formattedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`;\n\n  // Добавляем состояние для мигания символов (две черточки)\n  const [dashVisible, setDashVisible] = useState(true);\n  useEffect(() => {\n    const dashTimer = setInterval(() => setDashVisible(prev => !prev), 500);\n    return () => clearInterval(dashTimer);\n  }, []);\n\n  return (\n    <TouchableOpacity \n      style={styles.container} \n      onPress={() => navigation.navigate('SplashScreen')}\n    >\n      <Text style={[styles.text, { color: clockColor, opacity: clockOpacity }]}>\n        {formattedHours}\n      </Text>\n      <Text style={[styles.text_dash, { color: dashVisible ? clockColor : 'transparent', opacity: clockOpacity }]}>\n      ⬤     ⬤\n      </Text>\n      <Text style={[styles.text, { color: clockColor, opacity: clockOpacity }]}>\n        {formattedMinutes}\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 0,\n    paddingBottom: 20,\n  },\n  text: {\n    fontSize: 30,\n    fontFamily: 'DSEG7Classic-Bold',\n  },\n  text_dash: {\n    fontSize: 9,\n    paddingBottom: 6,\n    fontFamily: 'DSEG7Classic-Bold',\n    paddingHorizontal: 5,\n  },\n});\n\nexport default PlayerClock; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}