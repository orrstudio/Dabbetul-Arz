{"ast":null,"code":"\"use strict\";import{getHeaderTitle,HeaderBackContext,HeaderHeightContext,HeaderShownContext}from'@react-navigation/elements';import{useLinkBuilder,useLocale,useTheme}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{ModalPresentationContext}from\"../../utils/ModalPresentationContext.js\";import{useKeyboardManager}from\"../../utils/useKeyboardManager.js\";import{Card}from\"./Card.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const EPSILON=0.1;function CardContainerInner({interpolationIndex,index,active,opening,closing,gesture,focused,modal,getPreviousScene,getFocusedRoute,hasAbsoluteFloatHeader,headerHeight,onHeaderHeightChange,isParentHeaderShown,isNextScreenTransparent,detachCurrentScreen,layout,onCloseRoute,onOpenRoute,onGestureCancel,onGestureEnd,onGestureStart,onTransitionEnd,onTransitionStart,preloaded,renderHeader,safeAreaInsetBottom,safeAreaInsetLeft,safeAreaInsetRight,safeAreaInsetTop,scene}){const{direction}=useLocale();const parentHeaderHeight=React.useContext(HeaderHeightContext);const{onPageChangeStart,onPageChangeCancel,onPageChangeConfirm}=useKeyboardManager(React.useCallback(()=>{const{options,navigation}=scene.descriptor;return navigation.isFocused()&&options.keyboardHandlingEnabled!==false;},[scene.descriptor]));const handleOpen=()=>{const{route}=scene.descriptor;onTransitionEnd({route},false);onOpenRoute({route});};const handleClose=()=>{const{route}=scene.descriptor;onTransitionEnd({route},true);onCloseRoute({route});};const handleGestureBegin=()=>{const{route}=scene.descriptor;onPageChangeStart();onGestureStart({route});};const handleGestureCanceled=()=>{const{route}=scene.descriptor;onPageChangeCancel();onGestureCancel({route});};const handleGestureEnd=()=>{const{route}=scene.descriptor;onGestureEnd({route});};const handleTransition=({closing,gesture})=>{const{route}=scene.descriptor;if(!gesture){onPageChangeConfirm?.(true);}else if(active&&closing){onPageChangeConfirm?.(false);}else{onPageChangeCancel?.();}onTransitionStart?.({route},closing);};const insets={top:safeAreaInsetTop,right:safeAreaInsetRight,bottom:safeAreaInsetBottom,left:safeAreaInsetLeft};const{colors}=useTheme();const[pointerEvents,setPointerEvents]=React.useState('box-none');React.useEffect(()=>{const listener=scene.progress.next?.addListener?.(({value})=>{setPointerEvents(value<=EPSILON?'box-none':'none');});return()=>{if(listener){scene.progress.next?.removeListener?.(listener);}};},[pointerEvents,scene.progress.next]);const{presentation,animation,cardOverlay,cardOverlayEnabled,cardShadowEnabled,cardStyle,cardStyleInterpolator,gestureDirection,gestureEnabled,gestureResponseDistance,gestureVelocityImpact,headerMode,headerShown,transitionSpec}=scene.descriptor.options;const{buildHref}=useLinkBuilder();const previousScene=getPreviousScene({route:scene.descriptor.route});let backTitle;let href;if(previousScene){const{options,route}=previousScene.descriptor;backTitle=getHeaderTitle(options,route.name);href=buildHref(route.name,route.params);}const canGoBack=previousScene!=null;const headerBack=React.useMemo(()=>{if(canGoBack){return{href,title:backTitle};}return undefined;},[canGoBack,backTitle,href]);return _jsx(Card,{interpolationIndex:interpolationIndex,gestureDirection:gestureDirection,layout:layout,insets:insets,direction:direction,gesture:gesture,current:scene.progress.current,next:scene.progress.next,opening:opening,closing:closing,onOpen:handleOpen,onClose:handleClose,overlay:cardOverlay,overlayEnabled:cardOverlayEnabled,shadowEnabled:cardShadowEnabled,onTransition:handleTransition,onGestureBegin:handleGestureBegin,onGestureCanceled:handleGestureCanceled,onGestureEnd:handleGestureEnd,gestureEnabled:index===0?false:gestureEnabled,gestureResponseDistance:gestureResponseDistance,gestureVelocityImpact:gestureVelocityImpact,transitionSpec:transitionSpec,styleInterpolator:cardStyleInterpolator,accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',pointerEvents:active?'box-none':pointerEvents,pageOverflowEnabled:headerMode!=='float'&&presentation!=='modal',preloaded:preloaded,containerStyle:hasAbsoluteFloatHeader&&headerMode!=='screen'?{marginTop:headerHeight}:null,contentStyle:[{backgroundColor:presentation==='transparentModal'?'transparent':colors.background},cardStyle],style:[{overflow:active?undefined:'hidden',display:animation==='none'&&isNextScreenTransparent===false&&detachCurrentScreen!==false&&!focused?'none':'flex'},StyleSheet.absoluteFill],children:_jsx(View,{style:styles.container,children:_jsxs(ModalPresentationContext.Provider,{value:modal,children:[headerMode!=='float'?renderHeader({mode:'screen',layout,scenes:[previousScene,scene],getPreviousScene,getFocusedRoute,onContentHeightChange:onHeaderHeightChange,style:styles.header}):null,_jsx(View,{style:styles.scene,children:_jsx(HeaderBackContext.Provider,{value:headerBack,children:_jsx(HeaderShownContext.Provider,{value:isParentHeaderShown||headerShown!==false,children:_jsx(HeaderHeightContext.Provider,{value:headerShown!==false?headerHeight:parentHeaderHeight??0,children:scene.descriptor.render()})})})})]})})});}export const CardContainer=React.memo(CardContainerInner);const styles=StyleSheet.create({container:{flex:1},header:{zIndex:1},scene:{flex:1}});","map":{"version":3,"names":["getHeaderTitle","HeaderBackContext","HeaderHeightContext","HeaderShownContext","useLinkBuilder","useLocale","useTheme","React","StyleSheet","View","ModalPresentationContext","useKeyboardManager","Card","jsx","_jsx","jsxs","_jsxs","EPSILON","CardContainerInner","interpolationIndex","index","active","opening","closing","gesture","focused","modal","getPreviousScene","getFocusedRoute","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","isNextScreenTransparent","detachCurrentScreen","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","preloaded","renderHeader","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","direction","parentHeaderHeight","useContext","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","useCallback","options","navigation","descriptor","isFocused","keyboardHandlingEnabled","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","insets","top","right","bottom","left","colors","pointerEvents","setPointerEvents","useState","useEffect","listener","progress","next","addListener","value","removeListener","presentation","animation","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","buildHref","previousScene","backTitle","href","name","params","canGoBack","headerBack","useMemo","title","undefined","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","display","absoluteFill","children","styles","container","Provider","mode","scenes","onContentHeightChange","header","render","CardContainer","memo","create","flex","zIndex"],"sources":["/home/orr/GitHub/Dabbetul-Arz/node_modules/@react-navigation/stack/src/views/Stack/CardContainer.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  HeaderBackContext,\n  HeaderHeightContext,\n  HeaderShownContext,\n} from '@react-navigation/elements';\nimport {\n  type Route,\n  useLinkBuilder,\n  useLocale,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport type { Layout, Scene } from '../../types';\nimport { ModalPresentationContext } from '../../utils/ModalPresentationContext';\nimport { useKeyboardManager } from '../../utils/useKeyboardManager';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport { Card } from './Card';\n\ntype Props = {\n  interpolationIndex: number;\n  index: number;\n  active: boolean;\n  focused: boolean;\n  opening: boolean;\n  closing: boolean;\n  modal: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  preloaded: boolean;\n  scene: Scene;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  hasAbsoluteFloatHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n  isNextScreenTransparent: boolean;\n  detachCurrentScreen: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainerInner({\n  interpolationIndex,\n  index,\n  active,\n  opening,\n  closing,\n  gesture,\n  focused,\n  modal,\n  getPreviousScene,\n  getFocusedRoute,\n  hasAbsoluteFloatHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  isNextScreenTransparent,\n  detachCurrentScreen,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  preloaded,\n  renderHeader,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n}: Props) {\n  const { direction } = useLocale();\n\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const { onPageChangeStart, onPageChangeCancel, onPageChangeConfirm } =\n    useKeyboardManager(\n      React.useCallback(() => {\n        const { options, navigation } = scene.descriptor;\n\n        return (\n          navigation.isFocused() && options.keyboardHandlingEnabled !== false\n        );\n      }, [scene.descriptor])\n    );\n\n  const handleOpen = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeStart();\n    onGestureStart({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeCancel();\n    onGestureCancel({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene.descriptor;\n\n    onGestureEnd({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene.descriptor;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\n    'box-none'\n  );\n\n  React.useEffect(() => {\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const {\n    presentation,\n    animation,\n    cardOverlay,\n    cardOverlayEnabled,\n    cardShadowEnabled,\n    cardStyle,\n    cardStyleInterpolator,\n    gestureDirection,\n    gestureEnabled,\n    gestureResponseDistance,\n    gestureVelocityImpact,\n    headerMode,\n    headerShown,\n    transitionSpec,\n  } = scene.descriptor.options;\n\n  const { buildHref } = useLinkBuilder();\n  const previousScene = getPreviousScene({ route: scene.descriptor.route });\n\n  let backTitle: string | undefined;\n  let href: string | undefined;\n\n  if (previousScene) {\n    const { options, route } = previousScene.descriptor;\n\n    backTitle = getHeaderTitle(options, route.name);\n    href = buildHref(route.name, route.params);\n  }\n\n  const canGoBack = previousScene != null;\n  const headerBack = React.useMemo(() => {\n    if (canGoBack) {\n      return {\n        href,\n        title: backTitle,\n      };\n    }\n\n    return undefined;\n  }, [canGoBack, backTitle, href]);\n\n  return (\n    <Card\n      interpolationIndex={interpolationIndex}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      direction={direction}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      opening={opening}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={index === 0 ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode !== 'float' && presentation !== 'modal'}\n      preloaded={preloaded}\n      containerStyle={\n        hasAbsoluteFloatHeader && headerMode !== 'screen'\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[\n        {\n          backgroundColor:\n            presentation === 'transparentModal'\n              ? 'transparent'\n              : colors.background,\n        },\n        cardStyle,\n      ]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n          display:\n            // Hide unfocused screens when animation isn't enabled\n            // This is also necessary for a11y on web\n            animation === 'none' &&\n            isNextScreenTransparent === false &&\n            detachCurrentScreen !== false &&\n            !focused\n              ? 'none'\n              : 'flex',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <ModalPresentationContext.Provider value={modal}>\n          {headerMode !== 'float'\n            ? renderHeader({\n                mode: 'screen',\n                layout,\n                scenes: [previousScene, scene],\n                getPreviousScene,\n                getFocusedRoute,\n                onContentHeightChange: onHeaderHeightChange,\n                style: styles.header,\n              })\n            : null}\n          <View style={styles.scene}>\n            <HeaderBackContext.Provider value={headerBack}>\n              <HeaderShownContext.Provider\n                value={isParentHeaderShown || headerShown !== false}\n              >\n                <HeaderHeightContext.Provider\n                  value={\n                    headerShown !== false\n                      ? headerHeight\n                      : parentHeaderHeight ?? 0\n                  }\n                >\n                  {scene.descriptor.render()}\n                </HeaderHeightContext.Provider>\n              </HeaderShownContext.Provider>\n            </HeaderBackContext.Provider>\n          </View>\n        </ModalPresentationContext.Provider>\n      </View>\n    </Card>\n  );\n}\n\nexport const CardContainer = React.memo(CardContainerInner);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    zIndex: 1,\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}