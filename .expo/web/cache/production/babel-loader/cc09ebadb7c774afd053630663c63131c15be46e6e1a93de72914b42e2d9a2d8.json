{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"styleInterpolator\",\"interpolationIndex\",\"current\",\"gesture\",\"next\",\"layout\",\"insets\",\"overlay\",\"overlayEnabled\",\"shadowEnabled\",\"gestureEnabled\",\"gestureDirection\",\"pageOverflowEnabled\",\"children\",\"containerStyle\",\"contentStyle\",\"closing\",\"direction\",\"gestureResponseDistance\",\"gestureVelocityImpact\",\"onClose\",\"onGestureBegin\",\"onGestureCanceled\",\"onGestureEnd\",\"onOpen\",\"onTransition\",\"transitionSpec\"];import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import InteractionManager from\"react-native-web/dist/exports/InteractionManager\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{CardAnimationContext}from\"../../utils/CardAnimationContext.js\";import{getDistanceForDirection}from\"../../utils/getDistanceForDirection.js\";import{getInvertedMultiplier}from\"../../utils/getInvertedMultiplier.js\";import{getShadowStyle}from\"../../utils/getShadowStyle.js\";import{memoize}from\"../../utils/memoize.js\";import{GestureState,PanGestureHandler}from'../GestureHandler';import{CardSheet}from\"./CardSheet.js\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GESTURE_VELOCITY_IMPACT=0.3;const TRUE=1;const FALSE=0;const GESTURE_RESPONSE_DISTANCE_HORIZONTAL=50;const GESTURE_RESPONSE_DISTANCE_VERTICAL=135;const useNativeDriver=false;const hasOpacityStyle=style=>{if(style){const flattenedStyle=StyleSheet.flatten(style);return flattenedStyle.opacity!=null;}return false;};export class Card extends React.Component{static defaultProps={shadowEnabled:false,gestureEnabled:true,gestureVelocityImpact:GESTURE_VELOCITY_IMPACT,overlay:({style})=>style?_jsx(Animated.View,{pointerEvents:\"none\",style:[styles.overlay,style]}):null};componentDidMount(){if(!this.props.preloaded){this.animate({closing:this.props.closing});}this.isCurrentlyMounted=true;}componentDidUpdate(prevProps){const{gesture,direction,layout,gestureDirection,opening,closing}=this.props;const{width,height}=layout;if(width!==prevProps.layout.width){this.layout.width.setValue(width);}if(height!==prevProps.layout.height){this.layout.height.setValue(height);}if(gestureDirection!==prevProps.gestureDirection){this.inverted.setValue(getInvertedMultiplier(gestureDirection,direction==='rtl'));}const toValue=this.getAnimateToValue(this.props);if(this.getAnimateToValue(prevProps)!==toValue||this.lastToValue!==toValue){this.animate({closing});}else if(opening&&!prevProps.opening){gesture.setValue(getDistanceForDirection(layout,gestureDirection,direction==='rtl'));this.animate({closing});}}componentWillUnmount(){this.props.gesture?.stopAnimation();this.isCurrentlyMounted=false;this.handleEndInteraction();}isCurrentlyMounted=false;isClosing=new Animated.Value(FALSE);inverted=new Animated.Value(getInvertedMultiplier(this.props.gestureDirection,this.props.direction==='rtl'));layout={width:new Animated.Value(this.props.layout.width),height:new Animated.Value(this.props.layout.height)};isSwiping=new Animated.Value(FALSE);animate=({closing,velocity})=>{const{transitionSpec,onOpen,onClose,onTransition,gesture}=this.props;const toValue=this.getAnimateToValue(Object.assign({},this.props,{closing}));this.lastToValue=toValue;this.isClosing.setValue(closing?TRUE:FALSE);const spec=closing?transitionSpec.close:transitionSpec.open;const animation=spec.animation==='spring'?Animated.spring:Animated.timing;this.setPointerEventsEnabled(!closing);this.handleStartInteraction();clearTimeout(this.pendingGestureCallback);onTransition?.({closing,gesture:velocity!==undefined});animation(gesture,Object.assign({},spec.config,{velocity,toValue,useNativeDriver,isInteraction:false})).start(({finished})=>{this.handleEndInteraction();clearTimeout(this.pendingGestureCallback);if(finished){if(closing){onClose();}else{onOpen();}if(this.isCurrentlyMounted){this.forceUpdate();}}});};getAnimateToValue=({closing,layout,gestureDirection,direction,preloaded})=>{if(!closing&&!preloaded){return 0;}return getDistanceForDirection(layout,gestureDirection,direction==='rtl');};setPointerEventsEnabled=enabled=>{const pointerEvents=enabled?'box-none':'none';this.ref.current?.setPointerEvents(pointerEvents);};handleStartInteraction=()=>{if(this.interactionHandle===undefined){this.interactionHandle=InteractionManager.createInteractionHandle();}};handleEndInteraction=()=>{if(this.interactionHandle!==undefined){InteractionManager.clearInteractionHandle(this.interactionHandle);this.interactionHandle=undefined;}};handleGestureStateChange=({nativeEvent})=>{const{direction,layout,onClose,onGestureBegin,onGestureCanceled,onGestureEnd,gestureDirection,gestureVelocityImpact}=this.props;switch(nativeEvent.state){case GestureState.ACTIVE:this.isSwiping.setValue(TRUE);this.handleStartInteraction();onGestureBegin?.();break;case GestureState.CANCELLED:case GestureState.FAILED:{this.isSwiping.setValue(FALSE);this.handleEndInteraction();const velocity=gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?nativeEvent.velocityY:nativeEvent.velocityX;this.animate({closing:this.props.closing,velocity});onGestureCanceled?.();break;}case GestureState.END:{this.isSwiping.setValue(FALSE);let distance;let translation;let velocity;if(gestureDirection==='vertical'||gestureDirection==='vertical-inverted'){distance=layout.height;translation=nativeEvent.translationY;velocity=nativeEvent.velocityY;}else{distance=layout.width;translation=nativeEvent.translationX;velocity=nativeEvent.velocityX;}const closing=(translation+velocity*gestureVelocityImpact)*getInvertedMultiplier(gestureDirection,direction==='rtl')>distance/2?velocity!==0||translation!==0:this.props.closing;this.animate({closing,velocity});if(closing){this.pendingGestureCallback=setTimeout(()=>{onClose();this.forceUpdate();},32);}onGestureEnd?.();break;}}};getInterpolatedStyle=memoize((styleInterpolator,animation)=>styleInterpolator(animation));getCardAnimation=memoize((interpolationIndex,current,next,layout,insetTop,insetRight,insetBottom,insetLeft)=>({index:interpolationIndex,current:{progress:current},next:next&&{progress:next},closing:this.isClosing,swiping:this.isSwiping,inverted:this.inverted,layouts:{screen:layout},insets:{top:insetTop,right:insetRight,bottom:insetBottom,left:insetLeft}}));gestureActivationCriteria(){const{direction,layout,gestureDirection,gestureResponseDistance}=this.props;const enableTrackpadTwoFingerGesture=true;const distance=gestureResponseDistance!==undefined?gestureResponseDistance:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?GESTURE_RESPONSE_DISTANCE_VERTICAL:GESTURE_RESPONSE_DISTANCE_HORIZONTAL;if(gestureDirection==='vertical'){return{maxDeltaX:15,minOffsetY:5,hitSlop:{bottom:-layout.height+distance},enableTrackpadTwoFingerGesture};}else if(gestureDirection==='vertical-inverted'){return{maxDeltaX:15,minOffsetY:-5,hitSlop:{top:-layout.height+distance},enableTrackpadTwoFingerGesture};}else{const hitSlop=-layout.width+distance;const invertedMultiplier=getInvertedMultiplier(gestureDirection,direction==='rtl');if(invertedMultiplier===1){return{minOffsetX:5,maxDeltaY:20,hitSlop:{right:hitSlop},enableTrackpadTwoFingerGesture};}else{return{minOffsetX:-5,maxDeltaY:20,hitSlop:{left:hitSlop},enableTrackpadTwoFingerGesture};}}}ref=React.createRef();render(){const _this$props=this.props,{styleInterpolator,interpolationIndex,current,gesture,next,layout,insets,overlay,overlayEnabled,shadowEnabled,gestureEnabled,gestureDirection,pageOverflowEnabled,children,containerStyle:customContainerStyle,contentStyle}=_this$props,rest=_objectWithoutPropertiesLoose(_this$props,_excluded);const interpolationProps=this.getCardAnimation(interpolationIndex,current,next,layout,insets.top,insets.right,insets.bottom,insets.left);const interpolatedStyle=this.getInterpolatedStyle(styleInterpolator,interpolationProps);const{containerStyle,cardStyle,overlayStyle,shadowStyle}=interpolatedStyle;const handleGestureEvent=gestureEnabled?Animated.event([{nativeEvent:gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?{translationY:gesture}:{translationX:gesture}}],{useNativeDriver}):undefined;const{backgroundColor}=StyleSheet.flatten(contentStyle||{});const isTransparent=typeof backgroundColor==='string'?Color(backgroundColor).alpha()===0:false;return _jsxs(CardAnimationContext.Provider,{value:interpolationProps,children:[_jsx(Animated.View,{style:{opacity:current},collapsable:false}),_jsxs(View,Object.assign({pointerEvents:\"box-none\",collapsable:false},rest,{children:[overlayEnabled?_jsx(View,{pointerEvents:\"box-none\",style:StyleSheet.absoluteFill,children:overlay({style:overlayStyle})}):null,_jsx(Animated.View,{style:[styles.container,containerStyle,customContainerStyle],pointerEvents:\"box-none\",children:_jsx(PanGestureHandler,Object.assign({enabled:layout.width!==0&&gestureEnabled,onGestureEvent:handleGestureEvent,onHandlerStateChange:this.handleGestureStateChange},this.gestureActivationCriteria(),{children:_jsxs(Animated.View,{needsOffscreenAlphaCompositing:hasOpacityStyle(cardStyle),style:[styles.container,cardStyle],children:[shadowEnabled&&shadowStyle&&!isTransparent?_jsx(Animated.View,{style:[styles.shadow,gestureDirection==='horizontal'?[styles.shadowHorizontal,styles.shadowStart]:gestureDirection==='horizontal-inverted'?[styles.shadowHorizontal,styles.shadowEnd]:gestureDirection==='vertical'?[styles.shadowVertical,styles.shadowTop]:[styles.shadowVertical,styles.shadowBottom],{backgroundColor},shadowStyle],pointerEvents:\"none\"}):null,_jsx(CardSheet,{ref:this.ref,enabled:pageOverflowEnabled,layout:layout,style:contentStyle,children:children})]})}))})]}))]});}}const styles=StyleSheet.create({container:{flex:1},overlay:{flex:1,backgroundColor:'#000'},shadow:{position:'absolute'},shadowHorizontal:Object.assign({top:0,bottom:0,width:3},getShadowStyle({offset:{width:-1,height:1},radius:5,opacity:0.3})),shadowStart:{start:0},shadowEnd:{end:0},shadowVertical:Object.assign({start:0,end:0,height:3},getShadowStyle({offset:{width:1,height:-1},radius:5,opacity:0.3})),shadowTop:{top:0},shadowBottom:{bottom:0}});","map":{"version":3,"names":["Color","React","Animated","InteractionManager","Platform","StyleSheet","View","CardAnimationContext","getDistanceForDirection","getInvertedMultiplier","getShadowStyle","memoize","GestureState","PanGestureHandler","CardSheet","jsx","_jsx","jsxs","_jsxs","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","hasOpacityStyle","style","flattenedStyle","flatten","opacity","Card","Component","defaultProps","shadowEnabled","gestureEnabled","gestureVelocityImpact","overlay","pointerEvents","styles","componentDidMount","props","preloaded","animate","closing","isCurrentlyMounted","componentDidUpdate","prevProps","gesture","direction","layout","gestureDirection","opening","width","height","setValue","inverted","toValue","getAnimateToValue","lastToValue","componentWillUnmount","stopAnimation","handleEndInteraction","isClosing","Value","isSwiping","velocity","transitionSpec","onOpen","onClose","onTransition","Object","assign","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","undefined","config","isInteraction","start","finished","forceUpdate","enabled","ref","current","setPointerEvents","interactionHandle","createInteractionHandle","clearInteractionHandle","handleGestureStateChange","nativeEvent","onGestureBegin","onGestureCanceled","onGestureEnd","state","ACTIVE","CANCELLED","FAILED","velocityY","velocityX","END","distance","translation","translationY","translationX","setTimeout","getInterpolatedStyle","styleInterpolator","getCardAnimation","interpolationIndex","next","insetTop","insetRight","insetBottom","insetLeft","index","progress","swiping","layouts","screen","insets","top","right","bottom","left","gestureActivationCriteria","gestureResponseDistance","enableTrackpadTwoFingerGesture","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","createRef","render","_this$props","overlayEnabled","pageOverflowEnabled","children","containerStyle","customContainerStyle","contentStyle","rest","_objectWithoutPropertiesLoose","_excluded","interpolationProps","interpolatedStyle","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","backgroundColor","isTransparent","alpha","Provider","value","collapsable","absoluteFill","container","onGestureEvent","onHandlerStateChange","needsOffscreenAlphaCompositing","shadow","shadowHorizontal","shadowStart","shadowEnd","shadowVertical","shadowTop","shadowBottom","create","flex","position","offset","radius","end"],"sources":["/home/orr/GitHub/Dabbetul-Arz/node_modules/@react-navigation/stack/src/views/Stack/Card.tsx"],"sourcesContent":["import type { LocaleDirection } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  InteractionManager,\n  Platform,\n  type StyleProp,\n  StyleSheet,\n  View,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type {\n  GestureDirection,\n  Layout,\n  StackCardInterpolationProps,\n  StackCardStyleInterpolator,\n  TransitionSpec,\n} from '../../types';\nimport { CardAnimationContext } from '../../utils/CardAnimationContext';\nimport { getDistanceForDirection } from '../../utils/getDistanceForDirection';\nimport { getInvertedMultiplier } from '../../utils/getInvertedMultiplier';\nimport { getShadowStyle } from '../../utils/getShadowStyle';\nimport { memoize } from '../../utils/memoize';\nimport {\n  GestureState,\n  PanGestureHandler,\n  type PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport { CardSheet, type CardSheetRef } from './CardSheet';\n\ntype Props = ViewProps & {\n  interpolationIndex: number;\n  opening: boolean;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation<number>;\n  current: Animated.AnimatedInterpolation<number>;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  direction: LocaleDirection;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransition: (props: { closing: boolean; gesture: boolean }) => void;\n  onGestureBegin: () => void;\n  onGestureCanceled: () => void;\n  onGestureEnd: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: number;\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  preloaded: boolean;\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nconst hasOpacityStyle = (style: any) => {\n  if (style) {\n    const flattenedStyle = StyleSheet.flatten(style);\n    return flattenedStyle.opacity != null;\n  }\n\n  return false;\n};\n\nexport class Card extends React.Component<Props> {\n  static defaultProps = {\n    shadowEnabled: false,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    if (!this.props.preloaded) {\n      this.animate({\n        closing: this.props.closing,\n      });\n    }\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { gesture, direction, layout, gestureDirection, opening, closing } =\n      this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(\n        getInvertedMultiplier(gestureDirection, direction === 'rtl')\n      );\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // The route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    } else if (opening && !prevProps.opening) {\n      // This can happen when screen somewhere below in the stack comes into focus via rearranging\n      // Also reset the animated value to make sure that the animation starts from the beginning\n      gesture.setValue(\n        getDistanceForDirection(layout, gestureDirection, direction === 'rtl')\n      );\n\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.gesture?.stopAnimation();\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(\n      this.props.gestureDirection,\n      this.props.direction === 'rtl'\n    )\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: number | undefined;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const { transitionSpec, onOpen, onClose, onTransition, gesture } =\n      this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    this.isClosing.setValue(closing ? TRUE : FALSE);\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransition?.({ closing, gesture: velocity !== undefined });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n    direction,\n    preloaded,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n    direction: LocaleDirection;\n    preloaded: boolean;\n  }) => {\n    if (!closing && !preloaded) {\n      return 0;\n    }\n\n    return getDistanceForDirection(\n      layout,\n      gestureDirection,\n      direction === 'rtl'\n    );\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.ref.current?.setPointerEvents(pointerEvents);\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      direction,\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.ACTIVE:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED:\n      case GestureState.FAILED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({\n          closing: this.props.closing,\n          velocity,\n        });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection, direction === 'rtl') >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      animation: StackCardInterpolationProps\n    ) => styleInterpolator(animation)\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimation = memoize(\n    (\n      interpolationIndex: number,\n      current: Animated.AnimatedInterpolation<number>,\n      next: Animated.AnimatedInterpolation<number> | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index: interpolationIndex,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { direction, layout, gestureDirection, gestureResponseDistance } =\n      this.props;\n    const enableTrackpadTwoFingerGesture = true;\n\n    const distance =\n      gestureResponseDistance !== undefined\n        ? gestureResponseDistance\n        : gestureDirection === 'vertical' ||\n            gestureDirection === 'vertical-inverted'\n          ? GESTURE_RESPONSE_DISTANCE_VERTICAL\n          : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n        enableTrackpadTwoFingerGesture,\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(\n        gestureDirection,\n        direction === 'rtl'\n      );\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n          enableTrackpadTwoFingerGesture,\n        };\n      }\n    }\n  }\n\n  private ref = React.createRef<CardSheetRef>();\n\n  render() {\n    const {\n      styleInterpolator,\n      interpolationIndex,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      closing,\n      direction,\n      gestureResponseDistance,\n      gestureVelocityImpact,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      onOpen,\n      onTransition,\n      transitionSpec,\n      /* eslint-enable @typescript-eslint/no-unused-vars */\n      ...rest\n    } = this.props;\n\n    const interpolationProps = this.getCardAnimation(\n      interpolationIndex,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      interpolationProps\n    );\n\n    const { containerStyle, cardStyle, overlayStyle, shadowStyle } =\n      interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={interpolationProps}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View\n          pointerEvents=\"box-none\"\n          // Make sure this view is not removed on the new architecture, as it causes focus loss during navigation on Android.\n          // This can happen when the view flattening results in different trees - due to `overflow` style changing in a parent.\n          collapsable={false}\n          {...rest}\n        >\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View\n                needsOffscreenAlphaCompositing={hasOpacityStyle(cardStyle)}\n                style={[styles.container, cardStyle]}\n              >\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowStart]\n                        : gestureDirection === 'horizontal-inverted'\n                          ? [styles.shadowHorizontal, styles.shadowEnd]\n                          : gestureDirection === 'vertical'\n                            ? [styles.shadowVertical, styles.shadowTop]\n                            : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.ref}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    ...getShadowStyle({\n      offset: {\n        width: -1,\n        height: 1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowStart: {\n    start: 0,\n  },\n  shadowEnd: {\n    end: 0,\n  },\n  shadowVertical: {\n    start: 0,\n    end: 0,\n    height: 3,\n    ...getShadowStyle({\n      offset: {\n        width: 1,\n        height: -1,\n      },\n      radius: 5,\n      opacity: 0.3,\n    }),\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"mhBACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,QAAAC,QAAA,qDAAAC,kBAAA,+DAAAC,QAAA,qDAAAC,UAAA,uDAAAC,IAAA,0CAoB9B,OAASC,oBAAoB,KAAQ,qCAAkC,CACvE,OAASC,uBAAuB,KAAQ,wCAAqC,CAC7E,OAASC,qBAAqB,KAAQ,sCAAmC,CACzE,OAASC,cAAc,KAAQ,+BAA4B,CAC3D,OAASC,OAAO,KAAQ,wBAAqB,CAC7C,OACEC,YAAY,CACZC,iBAAiB,KAEZ,mBAAmB,CAC1B,OAASC,SAAS,KAA2B,gBAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAuC3D,KAAM,CAAAC,uBAAuB,CAAG,GAAG,CAEnC,KAAM,CAAAC,IAAI,CAAG,CAAC,CACd,KAAM,CAAAC,KAAK,CAAG,CAAC,CAKf,KAAM,CAAAC,oCAAoC,CAAG,EAAE,CAC/C,KAAM,CAAAC,kCAAkC,CAAG,GAAG,CAE9C,KAAM,CAAAC,eAAe,MAAwB,CAE7C,KAAM,CAAAC,eAAe,CAAIC,KAAU,EAAK,CACtC,GAAIA,KAAK,CAAE,CACT,KAAM,CAAAC,cAAc,CAAGtB,UAAU,CAACuB,OAAO,CAACF,KAAK,CAAC,CAChD,MAAO,CAAAC,cAAc,CAACE,OAAO,EAAI,IAAI,CACvC,CAEA,MAAO,MAAK,CACd,CAAC,CAED,MAAO,MAAM,CAAAC,IAAI,QAAS,CAAA7B,KAAK,CAAC8B,SAAiB,CAC/C,MAAO,CAAAC,YAAY,CAAG,CACpBC,aAAa,CAAE,KAAK,CACpBC,cAAc,CAAE,IAAI,CACpBC,qBAAqB,CAAEhB,uBAAuB,CAC9CiB,OAAO,CAAEA,CAAC,CACRV,KAGF,CAAC,GACCA,KAAK,CACHV,IAAA,CAACd,QAAQ,CAACI,IAAI,EAAC+B,aAAa,CAAC,MAAM,CAACX,KAAK,CAAE,CAACY,MAAM,CAACF,OAAO,CAAEV,KAAK,CAAE,CAAE,CAAC,CACpE,IACR,CAAC,CAEDa,iBAAiBA,CAAA,CAAG,CAClB,GAAI,CAAC,IAAI,CAACC,KAAK,CAACC,SAAS,CAAE,CACzB,IAAI,CAACC,OAAO,CAAC,CACXC,OAAO,CAAE,IAAI,CAACH,KAAK,CAACG,OACtB,CAAC,CAAC,CACJ,CACA,IAAI,CAACC,kBAAkB,CAAG,IAAI,CAChC,CAEAC,kBAAkBA,CAACC,SAAgB,CAAE,CACnC,KAAM,CAAEC,OAAO,CAAEC,SAAS,CAAEC,MAAM,CAAEC,gBAAgB,CAAEC,OAAO,CAAER,OAAQ,CAAC,CACtE,IAAI,CAACH,KAAK,CACZ,KAAM,CAAEY,KAAK,CAAEC,MAAO,CAAC,CAAGJ,MAAM,CAEhC,GAAIG,KAAK,GAAKN,SAAS,CAACG,MAAM,CAACG,KAAK,CAAE,CACpC,IAAI,CAACH,MAAM,CAACG,KAAK,CAACE,QAAQ,CAACF,KAAK,CAAC,CACnC,CAEA,GAAIC,MAAM,GAAKP,SAAS,CAACG,MAAM,CAACI,MAAM,CAAE,CACtC,IAAI,CAACJ,MAAM,CAACI,MAAM,CAACC,QAAQ,CAACD,MAAM,CAAC,CACrC,CAEA,GAAIH,gBAAgB,GAAKJ,SAAS,CAACI,gBAAgB,CAAE,CACnD,IAAI,CAACK,QAAQ,CAACD,QAAQ,CACpB7C,qBAAqB,CAACyC,gBAAgB,CAAEF,SAAS,GAAK,KAAK,CAC7D,CAAC,CACH,CAEA,KAAM,CAAAQ,OAAO,CAAG,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACjB,KAAK,CAAC,CAElD,GACE,IAAI,CAACiB,iBAAiB,CAACX,SAAS,CAAC,GAAKU,OAAO,EAC7C,IAAI,CAACE,WAAW,GAAKF,OAAO,CAC5B,CAMA,IAAI,CAACd,OAAO,CAAC,CAAEC,OAAQ,CAAC,CAAC,CAC3B,CAAC,IAAM,IAAIQ,OAAO,EAAI,CAACL,SAAS,CAACK,OAAO,CAAE,CAGxCJ,OAAO,CAACO,QAAQ,CACd9C,uBAAuB,CAACyC,MAAM,CAAEC,gBAAgB,CAAEF,SAAS,GAAK,KAAK,CACvE,CAAC,CAED,IAAI,CAACN,OAAO,CAAC,CAAEC,OAAQ,CAAC,CAAC,CAC3B,CACF,CAEAgB,oBAAoBA,CAAA,CAAG,CACrB,IAAI,CAACnB,KAAK,CAACO,OAAO,EAAEa,aAAa,CAAC,CAAC,CACnC,IAAI,CAAChB,kBAAkB,CAAG,KAAK,CAC/B,IAAI,CAACiB,oBAAoB,CAAC,CAAC,CAC7B,CAEQjB,kBAAkB,CAAG,KAAK,CAE1BkB,SAAS,CAAG,GAAI,CAAA5D,QAAQ,CAAC6D,KAAK,CAAC1C,KAAK,CAAC,CAErCkC,QAAQ,CAAG,GAAI,CAAArD,QAAQ,CAAC6D,KAAK,CACnCtD,qBAAqB,CACnB,IAAI,CAAC+B,KAAK,CAACU,gBAAgB,CAC3B,IAAI,CAACV,KAAK,CAACQ,SAAS,GAAK,KAC3B,CACF,CAAC,CAEOC,MAAM,CAAG,CACfG,KAAK,CAAE,GAAI,CAAAlD,QAAQ,CAAC6D,KAAK,CAAC,IAAI,CAACvB,KAAK,CAACS,MAAM,CAACG,KAAK,CAAC,CAClDC,MAAM,CAAE,GAAI,CAAAnD,QAAQ,CAAC6D,KAAK,CAAC,IAAI,CAACvB,KAAK,CAACS,MAAM,CAACI,MAAM,CACrD,CAAC,CAEOW,SAAS,CAAG,GAAI,CAAA9D,QAAQ,CAAC6D,KAAK,CAAC1C,KAAK,CAAC,CAQrCqB,OAAO,CAAGA,CAAC,CACjBC,OAAO,CACPsB,QAIF,CAAC,GAAK,CACJ,KAAM,CAAEC,cAAc,CAAEC,MAAM,CAAEC,OAAO,CAAEC,YAAY,CAAEtB,OAAQ,CAAC,CAC9D,IAAI,CAACP,KAAK,CAEZ,KAAM,CAAAgB,OAAO,CAAG,IAAI,CAACC,iBAAiB,CAAAa,MAAA,CAAAC,MAAA,IACjC,IAAI,CAAC/B,KAAK,EACbG,OAAA,EACD,CAAC,CAEF,IAAI,CAACe,WAAW,CAAGF,OAAO,CAE1B,IAAI,CAACM,SAAS,CAACR,QAAQ,CAACX,OAAO,CAAGvB,IAAI,CAAGC,KAAK,CAAC,CAE/C,KAAM,CAAAmD,IAAI,CAAG7B,OAAO,CAAGuB,cAAc,CAACO,KAAK,CAAGP,cAAc,CAACQ,IAAI,CAEjE,KAAM,CAAAC,SAAS,CACbH,IAAI,CAACG,SAAS,GAAK,QAAQ,CAAGzE,QAAQ,CAAC0E,MAAM,CAAG1E,QAAQ,CAAC2E,MAAM,CAEjE,IAAI,CAACC,uBAAuB,CAAC,CAACnC,OAAO,CAAC,CACtC,IAAI,CAACoC,sBAAsB,CAAC,CAAC,CAE7BC,YAAY,CAAC,IAAI,CAACC,sBAAsB,CAAC,CAEzCZ,YAAY,GAAG,CAAE1B,OAAO,CAAEI,OAAO,CAAEkB,QAAQ,GAAKiB,SAAU,CAAC,CAAC,CAC5DP,SAAS,CAAC5B,OAAO,CAAAuB,MAAA,CAAAC,MAAA,IACZC,IAAI,CAACW,MAAM,EACdlB,QAAQ,CACRT,OAAO,CACPhC,eAAe,CACf4D,aAAa,CAAE,OAChB,CAAC,CAACC,KAAK,CAAC,CAAC,CAAEC,QAAS,CAAC,GAAK,CACzB,IAAI,CAACzB,oBAAoB,CAAC,CAAC,CAE3BmB,YAAY,CAAC,IAAI,CAACC,sBAAsB,CAAC,CAEzC,GAAIK,QAAQ,CAAE,CACZ,GAAI3C,OAAO,CAAE,CACXyB,OAAO,CAAC,CAAC,CACX,CAAC,IAAM,CACLD,MAAM,CAAC,CAAC,CACV,CAEA,GAAI,IAAI,CAACvB,kBAAkB,CAAE,CAE3B,IAAI,CAAC2C,WAAW,CAAC,CAAC,CACpB,CACF,CACF,CAAC,CAAC,CACJ,CAAC,CAEO9B,iBAAiB,CAAGA,CAAC,CAC3Bd,OAAO,CACPM,MAAM,CACNC,gBAAgB,CAChBF,SAAS,CACTP,SAOF,CAAC,GAAK,CACJ,GAAI,CAACE,OAAO,EAAI,CAACF,SAAS,CAAE,CAC1B,MAAO,EAAC,CACV,CAEA,MAAO,CAAAjC,uBAAuB,CAC5ByC,MAAM,CACNC,gBAAgB,CAChBF,SAAS,GAAK,KAChB,CAAC,CACH,CAAC,CAEO8B,uBAAuB,CAAIU,OAAgB,EAAK,CACtD,KAAM,CAAAnD,aAAa,CAAGmD,OAAO,CAAG,UAAU,CAAG,MAAM,CAEnD,IAAI,CAACC,GAAG,CAACC,OAAO,EAAEC,gBAAgB,CAACtD,aAAa,CAAC,CACnD,CAAC,CAEO0C,sBAAsB,CAAGA,CAAA,GAAM,CACrC,GAAI,IAAI,CAACa,iBAAiB,GAAKV,SAAS,CAAE,CACxC,IAAI,CAACU,iBAAiB,CAAGzF,kBAAkB,CAAC0F,uBAAuB,CAAC,CAAC,CACvE,CACF,CAAC,CAEOhC,oBAAoB,CAAGA,CAAA,GAAM,CACnC,GAAI,IAAI,CAAC+B,iBAAiB,GAAKV,SAAS,CAAE,CACxC/E,kBAAkB,CAAC2F,sBAAsB,CAAC,IAAI,CAACF,iBAAiB,CAAC,CACjE,IAAI,CAACA,iBAAiB,CAAGV,SAAS,CACpC,CACF,CAAC,CAEOa,wBAAwB,CAAGA,CAAC,CAClCC,WAC6B,CAAC,GAAK,CACnC,KAAM,CACJhD,SAAS,CACTC,MAAM,CACNmB,OAAO,CACP6B,cAAc,CACdC,iBAAiB,CACjBC,YAAY,CACZjD,gBAAgB,CAChBf,qBACF,CAAC,CAAG,IAAI,CAACK,KAAK,CAEd,OAAQwD,WAAW,CAACI,KAAK,EACvB,IAAK,CAAAxF,YAAY,CAACyF,MAAM,CACtB,IAAI,CAACrC,SAAS,CAACV,QAAQ,CAAClC,IAAI,CAAC,CAC7B,IAAI,CAAC2D,sBAAsB,CAAC,CAAC,CAC7BkB,cAAc,GAAG,CAAC,CAClB,MACF,IAAK,CAAArF,YAAY,CAAC0F,SAAS,CAC3B,IAAK,CAAA1F,YAAY,CAAC2F,MAAM,CAAE,CACxB,IAAI,CAACvC,SAAS,CAACV,QAAQ,CAACjC,KAAK,CAAC,CAC9B,IAAI,CAACwC,oBAAoB,CAAC,CAAC,CAE3B,KAAM,CAAAI,QAAQ,CACZf,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACpC8C,WAAW,CAACQ,SAAS,CACrBR,WAAW,CAACS,SAAS,CAE3B,IAAI,CAAC/D,OAAO,CAAC,CACXC,OAAO,CAAE,IAAI,CAACH,KAAK,CAACG,OAAO,CAC3BsB,QACF,CAAC,CAAC,CAEFiC,iBAAiB,GAAG,CAAC,CACrB,MACF,CACA,IAAK,CAAAtF,YAAY,CAAC8F,GAAG,CAAE,CACrB,IAAI,CAAC1C,SAAS,CAACV,QAAQ,CAACjC,KAAK,CAAC,CAE9B,GAAI,CAAAsF,QAAQ,CACZ,GAAI,CAAAC,WAAW,CACf,GAAI,CAAA3C,QAAQ,CAEZ,GACEf,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACxC,CACAyD,QAAQ,CAAG1D,MAAM,CAACI,MAAM,CACxBuD,WAAW,CAAGZ,WAAW,CAACa,YAAY,CACtC5C,QAAQ,CAAG+B,WAAW,CAACQ,SAAS,CAClC,CAAC,IAAM,CACLG,QAAQ,CAAG1D,MAAM,CAACG,KAAK,CACvBwD,WAAW,CAAGZ,WAAW,CAACc,YAAY,CACtC7C,QAAQ,CAAG+B,WAAW,CAACS,SAAS,CAClC,CAEA,KAAM,CAAA9D,OAAO,CACX,CAACiE,WAAW,CAAG3C,QAAQ,CAAG9B,qBAAqB,EAC7C1B,qBAAqB,CAACyC,gBAAgB,CAAEF,SAAS,GAAK,KAAK,CAAC,CAC9D2D,QAAQ,CAAG,CAAC,CACR1C,QAAQ,GAAK,CAAC,EAAI2C,WAAW,GAAK,CAAC,CACnC,IAAI,CAACpE,KAAK,CAACG,OAAO,CAExB,IAAI,CAACD,OAAO,CAAC,CAAEC,OAAO,CAAEsB,QAAS,CAAC,CAAC,CAEnC,GAAItB,OAAO,CAAE,CAGX,IAAI,CAACsC,sBAAsB,CAAG8B,UAAU,CAAC,IAAM,CAC7C3C,OAAO,CAAC,CAAC,CAIT,IAAI,CAACmB,WAAW,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAkB,CACzB,CAEAY,YAAY,GAAG,CAAC,CAChB,MACF,CACF,CACF,CAAC,CAGOa,oBAAoB,CAAGrG,OAAO,CACpC,CACEsG,iBAA6C,CAC7CtC,SAAsC,GACnCsC,iBAAiB,CAACtC,SAAS,CAClC,CAAC,CAGOuC,gBAAgB,CAAGvG,OAAO,CAChC,CACEwG,kBAA0B,CAC1BzB,OAA+C,CAC/C0B,IAAwD,CACxDnE,MAAc,CACdoE,QAAgB,CAChBC,UAAkB,CAClBC,WAAmB,CACnBC,SAAiB,IACb,CACJC,KAAK,CAAEN,kBAAkB,CACzBzB,OAAO,CAAE,CAAEgC,QAAQ,CAAEhC,OAAQ,CAAC,CAC9B0B,IAAI,CAAEA,IAAI,EAAI,CAAEM,QAAQ,CAAEN,IAAK,CAAC,CAChCzE,OAAO,CAAE,IAAI,CAACmB,SAAS,CACvB6D,OAAO,CAAE,IAAI,CAAC3D,SAAS,CACvBT,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvBqE,OAAO,CAAE,CACPC,MAAM,CAAE5E,MACV,CAAC,CACD6E,MAAM,CAAE,CACNC,GAAG,CAAEV,QAAQ,CACbW,KAAK,CAAEV,UAAU,CACjBW,MAAM,CAAEV,WAAW,CACnBW,IAAI,CAAEV,SACR,CACF,CAAC,CACH,CAAC,CAEOW,yBAAyBA,CAAA,CAAG,CAClC,KAAM,CAAEnF,SAAS,CAAEC,MAAM,CAAEC,gBAAgB,CAAEkF,uBAAwB,CAAC,CACpE,IAAI,CAAC5F,KAAK,CACZ,KAAM,CAAA6F,8BAA8B,CAAG,IAAI,CAE3C,KAAM,CAAA1B,QAAQ,CACZyB,uBAAuB,GAAKlD,SAAS,CACjCkD,uBAAuB,CACvBlF,gBAAgB,GAAK,UAAU,EAC7BA,gBAAgB,GAAK,mBAAmB,CACxC3B,kCAAkC,CAClCD,oCAAoC,CAE5C,GAAI4B,gBAAgB,GAAK,UAAU,CAAE,CACnC,MAAO,CACLoF,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,CAAC,CACbC,OAAO,CAAE,CAAEP,MAAM,CAAE,CAAChF,MAAM,CAACI,MAAM,CAAGsD,QAAS,CAAC,CAC9C0B,8BACF,CAAC,CACH,CAAC,IAAM,IAAInF,gBAAgB,GAAK,mBAAmB,CAAE,CACnD,MAAO,CACLoF,SAAS,CAAE,EAAE,CACbC,UAAU,CAAE,CAAC,CAAC,CACdC,OAAO,CAAE,CAAET,GAAG,CAAE,CAAC9E,MAAM,CAACI,MAAM,CAAGsD,QAAS,CAAC,CAC3C0B,8BACF,CAAC,CACH,CAAC,IAAM,CACL,KAAM,CAAAG,OAAO,CAAG,CAACvF,MAAM,CAACG,KAAK,CAAGuD,QAAQ,CACxC,KAAM,CAAA8B,kBAAkB,CAAGhI,qBAAqB,CAC9CyC,gBAAgB,CAChBF,SAAS,GAAK,KAChB,CAAC,CAED,GAAIyF,kBAAkB,GAAK,CAAC,CAAE,CAC5B,MAAO,CACLC,UAAU,CAAE,CAAC,CACbC,SAAS,CAAE,EAAE,CACbH,OAAO,CAAE,CAAER,KAAK,CAAEQ,OAAQ,CAAC,CAC3BH,8BACF,CAAC,CACH,CAAC,IAAM,CACL,MAAO,CACLK,UAAU,CAAE,CAAC,CAAC,CACdC,SAAS,CAAE,EAAE,CACbH,OAAO,CAAE,CAAEN,IAAI,CAAEM,OAAQ,CAAC,CAC1BH,8BACF,CAAC,CACH,CACF,CACF,CAEQ5C,GAAG,CAAGxF,KAAK,CAAC2I,SAAS,CAAe,CAAC,CAE7CC,MAAMA,CAAA,CAAG,CACP,MAAAC,WAAA,CA+BI,IAAI,CAACtG,KAAK,CA/BR,CACJyE,iBAAiB,CACjBE,kBAAkB,CAClBzB,OAAO,CACP3C,OAAO,CACPqE,IAAI,CACJnE,MAAM,CACN6E,MAAM,CACN1F,OAAO,CACP2G,cAAc,CACd9G,aAAa,CACbC,cAAc,CACdgB,gBAAgB,CAChB8F,mBAAmB,CACnBC,QAAQ,CACRC,cAAc,CAAEC,oBAAoB,CACpCC,YAeF,CAAC,CAAAN,WAAA,CADIO,IAAA,CAAAC,6BAAA,CAAAR,WAAA,CAAAS,SAAA,EAGL,KAAM,CAAAC,kBAAkB,CAAG,IAAI,CAACtC,gBAAgB,CAC9CC,kBAAkB,CAClBzB,OAAO,CACP0B,IAAI,CACJnE,MAAM,CACN6E,MAAM,CAACC,GAAG,CACVD,MAAM,CAACE,KAAK,CACZF,MAAM,CAACG,MAAM,CACbH,MAAM,CAACI,IACT,CAAC,CAED,KAAM,CAAAuB,iBAAiB,CAAG,IAAI,CAACzC,oBAAoB,CACjDC,iBAAiB,CACjBuC,kBACF,CAAC,CAED,KAAM,CAAEN,cAAc,CAAEQ,SAAS,CAAEC,YAAY,CAAEC,WAAY,CAAC,CAC5DH,iBAAiB,CAEnB,KAAM,CAAAI,kBAAkB,CAAG3H,cAAc,CACrChC,QAAQ,CAAC4J,KAAK,CACZ,CACE,CACE9D,WAAW,CACT9C,gBAAgB,GAAK,UAAU,EAC/BA,gBAAgB,GAAK,mBAAmB,CACpC,CAAE2D,YAAY,CAAE9D,OAAQ,CAAC,CACzB,CAAE+D,YAAY,CAAE/D,OAAQ,CAChC,CAAC,CACF,CACD,CAAEvB,eAAgB,CACpB,CAAC,CACD0D,SAAS,CAEb,KAAM,CAAE6E,eAAgB,CAAC,CAAG1J,UAAU,CAACuB,OAAO,CAACwH,YAAY,EAAI,CAAC,CAAC,CAAC,CAClE,KAAM,CAAAY,aAAa,CACjB,MAAO,CAAAD,eAAe,GAAK,QAAQ,CAC/B/J,KAAK,CAAC+J,eAAe,CAAC,CAACE,KAAK,CAAC,CAAC,GAAK,CAAC,CACpC,KAAK,CAEX,MACE,CAAA/I,KAAA,CAACX,oBAAoB,CAAC2J,QAAQ,EAACC,KAAK,CAAEX,kBAAmB,CAAAP,QAAA,EACvDjI,IAAA,CAACd,QAAQ,CAACI,IAAI,EACZoB,KAAK,CAAE,CAKLG,OAAO,CAAE6D,OACX,EAEA0E,WAAW,CAAE,KAAM,CACpB,CAAC,CACFlJ,KAAA,CAACZ,IAAI,CAAAgE,MAAA,CAAAC,MAAA,EACHlC,aAAa,CAAC,WAGd+H,WAAW,CAAE,KAAM,EACff,IAAI,EAAAJ,QAAA,EAEPF,cAAc,CACb/H,IAAA,CAACV,IAAI,EAAC+B,aAAa,CAAC,UAAU,CAACX,KAAK,CAAErB,UAAU,CAACgK,YAAa,CAAApB,QAAA,CAC3D7G,OAAO,CAAC,CAAEV,KAAK,CAAEiI,YAAa,CAAC,CAAC,CAC7B,CAAC,CACL,IAAI,CACR3I,IAAA,CAACd,QAAQ,CAACI,IAAI,EACZoB,KAAK,CAAE,CAACY,MAAM,CAACgI,SAAS,CAAEpB,cAAc,CAAEC,oBAAoB,CAAE,CAChE9G,aAAa,CAAC,UAAU,CAAA4G,QAAA,CAExBjI,IAAA,CAACH,iBAAiB,CAAAyD,MAAA,CAAAC,MAAA,EAChBiB,OAAO,CAAEvC,MAAM,CAACG,KAAK,GAAK,CAAC,EAAIlB,cAAe,CAC9CqI,cAAc,CAAEV,kBAAmB,CACnCW,oBAAoB,CAAE,IAAI,CAACzE,wBAAyB,EAChD,IAAI,CAACoC,yBAAyB,CAAC,CAAC,EAAAc,QAAA,CAEpC/H,KAAA,CAAChB,QAAQ,CAACI,IAAI,EACZmK,8BAA8B,CAAEhJ,eAAe,CAACiI,SAAS,CAAE,CAC3DhI,KAAK,CAAE,CAACY,MAAM,CAACgI,SAAS,CAAEZ,SAAS,CAAE,CAAAT,QAAA,EAEpChH,aAAa,EAAI2H,WAAW,EAAI,CAACI,aAAa,CAC7ChJ,IAAA,CAACd,QAAQ,CAACI,IAAI,EACZoB,KAAK,CAAE,CACLY,MAAM,CAACoI,MAAM,CACbxH,gBAAgB,GAAK,YAAY,CAC7B,CAACZ,MAAM,CAACqI,gBAAgB,CAAErI,MAAM,CAACsI,WAAW,CAAC,CAC7C1H,gBAAgB,GAAK,qBAAqB,CACxC,CAACZ,MAAM,CAACqI,gBAAgB,CAAErI,MAAM,CAACuI,SAAS,CAAC,CAC3C3H,gBAAgB,GAAK,UAAU,CAC7B,CAACZ,MAAM,CAACwI,cAAc,CAAExI,MAAM,CAACyI,SAAS,CAAC,CACzC,CAACzI,MAAM,CAACwI,cAAc,CAAExI,MAAM,CAAC0I,YAAY,CAAC,CACpD,CAAEjB,eAAgB,CAAC,CACnBH,WAAW,CACX,CACFvH,aAAa,CAAC,MAAM,CACrB,CAAC,CACA,IAAI,CACRrB,IAAA,CAACF,SAAS,EACR2E,GAAG,CAAE,IAAI,CAACA,GAAI,CACdD,OAAO,CAAEwD,mBAAoB,CAC7B/F,MAAM,CAAEA,MAAO,CACfvB,KAAK,CAAE0H,YAAa,CAAAH,QAAA,CAEnBA,QAAQ,CACA,CAAC,EACC,GACE,CAAC,CACP,CAAC,GACZ,CAAC,EACsB,CAAC,CAEpC,CACF,CAEA,KAAM,CAAA3G,MAAM,CAAGjC,UAAU,CAAC4K,MAAM,CAAC,CAC/BX,SAAS,CAAE,CACTY,IAAI,CAAE,CACR,CAAC,CACD9I,OAAO,CAAE,CACP8I,IAAI,CAAE,CAAC,CACPnB,eAAe,CAAE,MACnB,CAAC,CACDW,MAAM,CAAE,CACNS,QAAQ,CAAE,UACZ,CAAC,CACDR,gBAAgB,CAAArG,MAAA,CAAAC,MAAA,EACdwD,GAAG,CAAE,CAAC,CACNE,MAAM,CAAE,CAAC,CACT7E,KAAK,CAAE,CAAC,EACL1C,cAAc,CAAC,CAChB0K,MAAM,CAAE,CACNhI,KAAK,CAAE,CAAC,CAAC,CACTC,MAAM,CAAE,CACV,CAAC,CACDgI,MAAM,CAAE,CAAC,CACTxJ,OAAO,CAAE,GACX,CAAC,EACF,CACD+I,WAAW,CAAE,CACXvF,KAAK,CAAE,CACT,CAAC,CACDwF,SAAS,CAAE,CACTS,GAAG,CAAE,CACP,CAAC,CACDR,cAAc,CAAAxG,MAAA,CAAAC,MAAA,EACZc,KAAK,CAAE,CAAC,CACRiG,GAAG,CAAE,CAAC,CACNjI,MAAM,CAAE,CAAC,EACN3C,cAAc,CAAC,CAChB0K,MAAM,CAAE,CACNhI,KAAK,CAAE,CAAC,CACRC,MAAM,CAAE,CAAC,CACX,CAAC,CACDgI,MAAM,CAAE,CAAC,CACTxJ,OAAO,CAAE,GACX,CAAC,EACF,CACDkJ,SAAS,CAAE,CACThD,GAAG,CAAE,CACP,CAAC,CACDiD,YAAY,CAAE,CACZ/C,MAAM,CAAE,CACV,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}