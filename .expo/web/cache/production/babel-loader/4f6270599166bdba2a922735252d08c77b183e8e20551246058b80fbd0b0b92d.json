{"ast":null,"code":"import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"source\",\"style\",\"controls\"];import React,{useRef,useEffect,useState}from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Hls from'hls.js';import*as ScreenOrientation from'expo-screen-orientation';import{jsx as _jsx}from\"react/jsx-runtime\";const HLSVideoPlayer=_ref=>{let{source,style,controls=true}=_ref,restProps=_objectWithoutPropertiesLoose(_ref,_excluded);const videoRef=useRef(null);const[videoDimensions,setVideoDimensions]=useState(Dimensions.get('window'));useEffect(()=>{const onChange=({window})=>{setVideoDimensions(window);};const subscription=Dimensions.addEventListener('change',onChange);return()=>subscription?.remove();},[]);const isPortrait=videoDimensions.height>=videoDimensions.width;const defaultWidth=isPortrait?videoDimensions.width:videoDimensions.width*0.7;const defaultHeight=defaultWidth/(16/9);const mergedStyle=StyleSheet.flatten([{width:defaultWidth,height:defaultHeight},style]);useEffect(()=>{const video=videoRef.current;if(!video)return;if(video.canPlayType('application/vnd.apple.mpegurl')){video.src=source;}else if(Hls.isSupported()){const hls=new Hls();hls.loadSource(source);hls.attachMedia(video);return()=>{hls.destroy();};}else{console.error('HLS streaming is not supported in this browser.');}},[source]);useEffect(()=>{async function unlockVideoOrientation(){try{await ScreenOrientation.unlockAsync();console.log(\"Видео окно: ориентация разблокирована\");}catch(error){console.log(\"Ошибка разблокировки ориентации для видео:\",error);}}unlockVideoOrientation();return()=>{async function lockOrientationBack(){try{await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);console.log(\"Видео окно: ориентация снова заблокирована\");}catch(error){console.log(\"Ошибка повторной блокировки ориентации:\",error);}}lockOrientationBack();};},[]);return _jsx(\"video\",Object.assign({ref:videoRef,style:mergedStyle,controls:controls},restProps));};export default HLSVideoPlayer;","map":{"version":3,"names":["React","useRef","useEffect","useState","Dimensions","StyleSheet","Hls","ScreenOrientation","jsx","_jsx","HLSVideoPlayer","_ref","source","style","controls","restProps","_objectWithoutPropertiesLoose","_excluded","videoRef","videoDimensions","setVideoDimensions","get","onChange","window","subscription","addEventListener","remove","isPortrait","height","width","defaultWidth","defaultHeight","mergedStyle","flatten","video","current","canPlayType","src","isSupported","hls","loadSource","attachMedia","destroy","console","error","unlockVideoOrientation","unlockAsync","log","lockOrientationBack","lockAsync","OrientationLock","PORTRAIT","Object","assign","ref"],"sources":["/home/orr/GitHub/Dabbetul-Arz/src/components/HLSVideoPlayer.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Dimensions, StyleSheet } from 'react-native';\nimport Hls from 'hls.js';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\nconst HLSVideoPlayer = ({ source, style, controls = true, ...restProps }) => {\n  const videoRef = useRef(null);\n\n  // Обработка изменения размеров окна (ориентация)\n  const [videoDimensions, setVideoDimensions] = useState(Dimensions.get('window'));\n  useEffect(() => {\n    const onChange = ({ window }) => {\n      setVideoDimensions(window);\n    };\n    const subscription = Dimensions.addEventListener('change', onChange);\n    return () => subscription?.remove();\n  }, []);\n\n  const isPortrait = videoDimensions.height >= videoDimensions.width;\n  // Размеры по умолчанию: если в портретной ориентации — вся ширина окна, иначе 70% ширины\n  const defaultWidth = isPortrait ? videoDimensions.width : videoDimensions.width * 0.7;\n  const defaultHeight = defaultWidth / (16 / 9);\n  // Объединяем стиль по умолчанию с переданным style (если он есть)\n  const mergedStyle = StyleSheet.flatten([{ width: defaultWidth, height: defaultHeight }, style]);\n\n  useEffect(() => {\n    const video = videoRef.current;\n    if (!video) return;\n\n    // Если браузер нативно поддерживает HLS (например, Safari)\n    if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      video.src = source;\n    } else if (Hls.isSupported()) {\n      // Если поддерживается Hls.js\n      const hls = new Hls();\n      hls.loadSource(source);\n      hls.attachMedia(video);\n      // Очищаем hls-инстанс при размонтировании компонента\n      return () => {\n        hls.destroy();\n      };\n    } else {\n      console.error('HLS streaming is not supported in this browser.');\n    }\n  }, [source]);\n\n  // Разблокируем ориентацию для видео-окна, чтобы менять размеры при повороте устройства.\n  // По окончании работы плеера (при размонтировании) снова блокируем ориентацию на портрет.\n  useEffect(() => {\n    async function unlockVideoOrientation() {\n      try {\n        await ScreenOrientation.unlockAsync();\n        console.log(\"Видео окно: ориентация разблокирована\");\n      } catch (error) {\n        console.log(\"Ошибка разблокировки ориентации для видео:\", error);\n      }\n    }\n    unlockVideoOrientation();\n    return () => {\n      async function lockOrientationBack() {\n        try {\n          await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n          console.log(\"Видео окно: ориентация снова заблокирована\");\n        } catch (error) {\n          console.log(\"Ошибка повторной блокировки ориентации:\", error);\n        }\n      }\n      lockOrientationBack();\n    };\n  }, []);\n\n  return (\n    <video\n      ref={videoRef}\n      style={mergedStyle}\n      controls={controls}\n      {...restProps}\n    />\n  );\n};\n\nexport default HLSVideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}