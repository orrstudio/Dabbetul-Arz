{"ast":null,"code":"\"use strict\";import{CommonActions,getActionFromState,getPathFromState,getStateFromPath,NavigationHelpersContext}from'@react-navigation/core';import*as React from'react';import{LinkingContext}from\"./LinkingContext.js\";const getRootStateForNavigate=(navigation,state)=>{const parent=navigation.getParent();if(parent){const parentState=parent.getState();return getRootStateForNavigate(parent,{index:0,routes:[Object.assign({},parentState.routes[parentState.index],{state:state})]});}return state;};export function useLinkBuilder(){const navigation=React.useContext(NavigationHelpersContext);const linking=React.useContext(LinkingContext);const buildHref=React.useCallback((name,params)=>{const{options}=linking;if(options?.enabled===false){return undefined;}const state=navigation?getRootStateForNavigate(navigation,{index:0,routes:[{name,params}]}):{index:0,routes:[{name,params}]};const path=options?.getPathFromState?options.getPathFromState(state,options?.config):getPathFromState(state,options?.config);return path;},[linking,navigation]);const buildAction=React.useCallback(href=>{if(!href.startsWith('/')){throw new Error(`The href must start with '/' (${href}).`);}const{options}=linking;const state=options?.getStateFromPath?options.getStateFromPath(href,options.config):getStateFromPath(href,options?.config);if(state){const action=getActionFromState(state,options?.config);return action??CommonActions.reset(state);}else{throw new Error('Failed to parse the href to a navigation state.');}},[linking]);return{buildHref,buildAction};}","map":{"version":3,"names":["CommonActions","getActionFromState","getPathFromState","getStateFromPath","NavigationHelpersContext","React","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","Object","assign","useLinkBuilder","useContext","linking","buildHref","useCallback","name","params","options","enabled","undefined","path","config","buildAction","href","startsWith","Error","action","reset"],"sources":["/home/orr/GitHub/Dabbetul-Arz/node_modules/@react-navigation/native/src/useLinkBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  type NavigationHelpers,\n  NavigationHelpersContext,\n  type NavigationProp,\n  type ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport { LinkingContext } from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Helpers to build href or action based on the linking options.\n * @returns `buildHref` to build an `href` for screen and `buildAction` to build an action from an `href`.\n */\nexport function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildHref = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  const buildAction = React.useCallback(\n    (href: string) => {\n      if (!href.startsWith('/')) {\n        throw new Error(`The href must start with '/' (${href}).`);\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(href, options.config)\n        : getStateFromPath(href, options?.config);\n\n      if (state) {\n        const action = getActionFromState(state, options?.config);\n\n        return action ?? CommonActions.reset(state);\n      } else {\n        throw new Error('Failed to parse the href to a navigation state.');\n      }\n    },\n    [linking]\n  );\n\n  return {\n    buildHref,\n    buildAction,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}