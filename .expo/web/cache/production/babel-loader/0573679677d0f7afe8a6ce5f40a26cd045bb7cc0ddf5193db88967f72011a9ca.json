{"ast":null,"code":"import{Asset}from'./Asset';import{IS_ENV_WITH_LOCAL_ASSETS}from'./PlatformUtils';import{setCustomSourceTransformer}from'./resolveAssetSource';if(IS_ENV_WITH_LOCAL_ASSETS){setCustomSourceTransformer(resolver=>{try{if(resolver.asset.fileHashes){const asset=Asset.fromMetadata(resolver.asset);return resolver.fromSource(asset.downloaded?asset.localUri:asset.uri);}else{return resolver.defaultAsset();}}catch{return resolver.defaultAsset();}});}","map":{"version":3,"names":["Asset","IS_ENV_WITH_LOCAL_ASSETS","setCustomSourceTransformer","resolver","asset","fileHashes","fromMetadata","fromSource","downloaded","localUri","uri","defaultAsset"],"sources":["/home/orr/GitHub/Dabbetul-Arz/node_modules/expo-asset/src/Asset.fx.ts"],"sourcesContent":["import { Asset } from './Asset';\nimport { IS_ENV_WITH_LOCAL_ASSETS } from './PlatformUtils';\nimport { setCustomSourceTransformer } from './resolveAssetSource';\n\n// Override React Native's asset resolution for `Image` components in contexts where it matters\nif (IS_ENV_WITH_LOCAL_ASSETS) {\n  setCustomSourceTransformer((resolver) => {\n    try {\n      // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n      if (resolver.asset.fileHashes) {\n        const asset = Asset.fromMetadata(resolver.asset);\n        return resolver.fromSource(asset.downloaded ? asset.localUri! : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch {\n      return resolver.defaultAsset();\n    }\n  });\n}\n"],"mappings":"AAAA,OAASA,KAAK,KAAQ,SAAS,CAC/B,OAASC,wBAAwB,KAAQ,iBAAiB,CAC1D,OAASC,0BAA0B,KAAQ,sBAAsB,CAGjE,GAAID,wBAAwB,CAAE,CAC5BC,0BAA0B,CAAEC,QAAQ,EAAI,CACtC,GAAI,CAEF,GAAIA,QAAQ,CAACC,KAAK,CAACC,UAAU,CAAE,CAC7B,KAAM,CAAAD,KAAK,CAAGJ,KAAK,CAACM,YAAY,CAACH,QAAQ,CAACC,KAAK,CAAC,CAChD,MAAO,CAAAD,QAAQ,CAACI,UAAU,CAACH,KAAK,CAACI,UAAU,CAAGJ,KAAK,CAACK,QAAS,CAAGL,KAAK,CAACM,GAAG,CAAC,C,CAC3E,IAAM,CACL,MAAO,CAAAP,QAAQ,CAACQ,YAAY,EAAE,C,EAEhC,KAAM,CACN,MAAO,CAAAR,QAAQ,CAACQ,YAAY,EAAE,C,CAElC,CAAC,CAAC,C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}