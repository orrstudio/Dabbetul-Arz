{"ast":null,"code":"import React,{useLayoutEffect,useContext,useRef,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Text from\"react-native-web/dist/exports/Text\";import TimeDisplay from'../components/TimeDisplay';import DateDisplay from'../components/DateDisplay';import{ClockSettingsContext}from'../contexts/ClockSettingsContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SplashScreen=({navigation})=>{const{clockOpacity,setClockOpacity,clockColor,setClockColor}=useContext(ClockSettingsContext);const clockColorRef=useRef(clockColor);useEffect(()=>{clockColorRef.current=clockColor;},[clockColor]);useLayoutEffect(()=>{navigation.setOptions({headerTitle:'Splash'});},[navigation]);const calculateSwipe=(dx,dy,threshold=30,ratio=1.5)=>{const absDx=Math.abs(dx);const absDy=Math.abs(dy);if(absDx<threshold&&absDy<threshold){return{type:'none',delta:0};}if(absDx>=ratio*absDy){return{type:'horizontal',delta:dx};}if(absDy>=ratio*absDx){return{type:'vertical',delta:dy};}return{type:'vertical',delta:dy};};const panResponder=useRef(PanResponder.create({onStartShouldSetPanResponder:()=>true,onStartShouldSetPanResponderCapture:()=>true,onMoveShouldSetPanResponder:()=>true,onMoveShouldSetPanResponderCapture:()=>true,onPanResponderRelease:(evt,gestureState)=>{const{dx,dy}=gestureState;const swipe=calculateSwipe(dx,dy,30,1.5);if(swipe.type==='horizontal'){const colors=['#00FF00','#FF0000','#FFFF00','#00FFFF','#FF00FF','#FFFFFF'];const currentIndex=colors.indexOf(clockColorRef.current);if(swipe.delta>0){setClockColor(colors[(currentIndex+1)%colors.length]);}else{setClockColor(colors[(currentIndex-1+colors.length)%colors.length]);}}else if(swipe.type==='vertical'){setClockOpacity(prev=>{const adjustment=-swipe.delta/100*0.05;let newOpacity=prev+adjustment;if(newOpacity>1)newOpacity=1;if(newOpacity<0)newOpacity=0;return newOpacity;});}}})).current;return _jsxs(View,Object.assign({style:{flex:1,backgroundColor:'#000000',justifyContent:'center',alignItems:'center'}},panResponder.panHandlers,{children:[_jsxs(View,{style:{position:'relative',alignItems:'center'},children:[_jsx(Text,{style:{position:'absolute',top:0,left:0,right:0,fontSize:Dimensions.get('window').width*0.21,fontFamily:'DSEG7Classic-Bold',color:clockColor,opacity:clockOpacity*0.2,textAlign:'center'},children:\"88:88\"}),_jsx(TimeDisplay,{timeScale:0.21})]}),_jsx(View,{style:{marginTop:30},children:_jsx(DateDisplay,{dateScale:0.05})})]}));};export default SplashScreen;","map":{"version":3,"names":["React","useLayoutEffect","useContext","useRef","useEffect","View","PanResponder","Dimensions","Text","TimeDisplay","DateDisplay","ClockSettingsContext","jsx","_jsx","jsxs","_jsxs","SplashScreen","navigation","clockOpacity","setClockOpacity","clockColor","setClockColor","clockColorRef","current","setOptions","headerTitle","calculateSwipe","dx","dy","threshold","ratio","absDx","Math","abs","absDy","type","delta","panResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderRelease","evt","gestureState","swipe","colors","currentIndex","indexOf","length","prev","adjustment","newOpacity","Object","assign","style","flex","backgroundColor","justifyContent","alignItems","panHandlers","children","position","top","left","right","fontSize","get","width","fontFamily","color","opacity","textAlign","timeScale","marginTop","dateScale"],"sources":["/home/orr/GitHub/Dabbetul-Arz/src/screens/SplashScreen.js"],"sourcesContent":["/**\n * SplashScreen\n * Экран заставки, на котором отображаются анимированные часы и дата.\n * Глобальные настройки (цвет и яркость) изменяются посредством свайпов.\n *\n * Горизонтальный свайп -> смена цвета.\n * Вертикальный свайп -> пропорциональное изменение яркости.\n *\n * @returns {JSX.Element}\n */\nimport React, { useLayoutEffect, useContext, useRef, useEffect } from 'react';\nimport { View, PanResponder, Dimensions, Text } from 'react-native';\nimport TimeDisplay from '../components/TimeDisplay';\nimport DateDisplay from '../components/DateDisplay';\nimport { ClockSettingsContext } from '../contexts/ClockSettingsContext';\n\nconst SplashScreen = ({ navigation }) => {\n  const { clockOpacity, setClockOpacity, clockColor, setClockColor } = useContext(ClockSettingsContext);\n\n  // Создаем ref для актуального значения цвета, чтобы использовать его внутри обработчика\n  const clockColorRef = useRef(clockColor);\n  useEffect(() => {\n    clockColorRef.current = clockColor;\n  }, [clockColor]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      headerTitle: 'Splash',\n    });\n  }, [navigation]);\n\n  /**\n   * Функция для расчёта направления и величины свайпа.\n   *\n   * @param {number} dx - горизонтальное смещение.\n   * @param {number} dy - вертикальное смещение.\n   * @param {number} threshold - минимальное смещение для активации свайпа.\n   * @param {number} ratio - пороговое соотношение смещений,\n   *        при котором свайп считается чисто горизонтальным (dx >= ratio * dy) или чисто вертикальным (dy >= ratio * dx).\n   *\n   * @returns {Object} { type: 'horizontal' | 'vertical' | 'none', delta: number }\n   */\n  const calculateSwipe = (dx, dy, threshold = 30, ratio = 1.5) => {\n    const absDx = Math.abs(dx);\n    const absDy = Math.abs(dy);\n    if (absDx < threshold && absDy < threshold) {\n      return { type: 'none', delta: 0 };\n    }\n    if (absDx >= ratio * absDy) {\n      return { type: 'horizontal', delta: dx };\n    }\n    if (absDy >= ratio * absDx) {\n      return { type: 'vertical', delta: dy };\n    }\n    // В нечетких ситуациях выбираем вертикальное действие\n    return { type: 'vertical', delta: dy };\n  };\n\n  // Создаем panResponder с использованием функции calculateSwipe\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onStartShouldSetPanResponderCapture: () => true, // Захватываем жесты с начала\n      onMoveShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponderCapture: () => true,\n      onPanResponderRelease: (evt, gestureState) => {\n        const { dx, dy } = gestureState;\n        const swipe = calculateSwipe(dx, dy, 30, 1.5);\n        if (swipe.type === 'horizontal') {\n          // Горизонтальный свайп — изменение цвета\n          const colors = ['#00FF00', '#FF0000', '#FFFF00', '#00FFFF', '#FF00FF', '#FFFFFF'];\n          const currentIndex = colors.indexOf(clockColorRef.current);\n          if (swipe.delta > 0) {\n            setClockColor(colors[(currentIndex + 1) % colors.length]);\n          } else {\n            setClockColor(colors[(currentIndex - 1 + colors.length) % colors.length]);\n          }\n        } else if (swipe.type === 'vertical') {\n          // Вертикальный свайп — пропорциональное изменение яркости.\n          // При свайпе вверх (swipe.delta отрицательный) яркость увеличивается,\n          // а при свайпе вниз (swipe.delta положительный) — уменьшается.\n          setClockOpacity(prev => {\n            // Инвертируем swipe.delta, чтобы изменить направление эффекта.\n            const adjustment = (-swipe.delta / 100) * 0.05;\n            let newOpacity = prev + adjustment;\n            if (newOpacity > 1) newOpacity = 1;\n            if (newOpacity < 0) newOpacity = 0;\n            return newOpacity;\n          });\n        }\n      },\n    })\n  ).current;\n\n  return (\n    <View\n      style={{ flex: 1, backgroundColor: '#000000', justifyContent: 'center', alignItems: 'center' }}\n      {...panResponder.panHandlers}\n    >\n      <View style={{ position: 'relative', alignItems: 'center' }}>\n        <Text \n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            fontSize: Dimensions.get('window').width * 0.21,\n            fontFamily: 'DSEG7Classic-Bold',\n            color: clockColor,\n            opacity: clockOpacity * 0.2,\n            textAlign: 'center',\n          }}\n        >\n          88:88\n        </Text>\n        <TimeDisplay timeScale={0.21} />\n      </View>\n      <View style={{ marginTop: 30 }}>\n        <DateDisplay dateScale={0.05} />\n      </View>\n    </View>\n  );\n};\n\nexport default SplashScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}