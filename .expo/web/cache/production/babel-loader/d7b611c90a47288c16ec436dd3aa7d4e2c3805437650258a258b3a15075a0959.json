{"ast":null,"code":"import Platform from\"react-native-web/dist/exports/Platform\";import createMultiStyleIconSet from'./createMultiStyleIconSet';const FA6Style={regular:'regular',light:'light',solid:'solid',brand:'brand',sharp:'sharp',sharpLight:'sharpLight',sharpSolid:'sharpSolid',duotone:'duotone',thin:'thin'};function createFA6iconSet(glyphMap,metadata={},fonts,pro=false){const metadataKeys=Object.keys(metadata);const fontFamily=`FontAwesome6${pro?'Pro':'Free'}`;function fallbackFamily(glyph){for(let i=0;i<metadataKeys.length;i+=1){const family=metadataKeys[i];if(metadata[family].indexOf(glyph)!==-1){return family==='brands'?'brand':family;}}return'regular';}function glyphValidator(glyph,style){let family=style==='brand'?'brands':style;family=style==='sharpSolid'?'sharp-solid':family;if(metadataKeys.indexOf(family)===-1)return false;return metadata[family].indexOf(glyph)!==-1;}function createFontAwesomeStyle(style,fontWeight,family=fontFamily){let styleName=style;const fontFile=fonts[styleName];if(styleName==='Brands'){styleName='Regular';}if(styleName==='Duotone'){styleName='Solid';}styleName=styleName.replace('Sharp_','');return{fontFamily:`${family}-${styleName}`,fontFile,fontStyle:{},glyphMap};}const brandIcons=createFontAwesomeStyle('Brands','400','FontAwesome6Brands');const lightIcons=createFontAwesomeStyle('Light','300');const regularIcons=createFontAwesomeStyle('Regular','400');const solidIcons=createFontAwesomeStyle('Solid','900');const sharpLightIcons=createFontAwesomeStyle('Sharp_Light','300','FontAwesome6Sharp');const sharpIcons=createFontAwesomeStyle('Sharp_Regular','400','FontAwesome6Sharp');const sharpSolidIcons=createFontAwesomeStyle('Sharp_Solid','900','FontAwesome6Sharp');const duotoneIcons=createFontAwesomeStyle('Duotone','900','FontAwesome6Duotone');const thinIcons=createFontAwesomeStyle('Thin','100');const Icon=createMultiStyleIconSet({brand:brandIcons,light:lightIcons,regular:regularIcons,solid:solidIcons,sharp:sharpIcons,sharpLight:sharpLightIcons,sharpSolid:sharpSolidIcons,duotone:duotoneIcons,thin:thinIcons},{defaultStyle:'regular',fallbackFamily,glyphValidator});return Icon;}export{createFA6iconSet,FA6Style};","map":{"version":3,"names":["createMultiStyleIconSet","FA6Style","regular","light","solid","brand","sharp","sharpLight","sharpSolid","duotone","thin","createFA6iconSet","glyphMap","metadata","fonts","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","fontWeight","styleName","fontFile","replace","fontStyle","brandIcons","lightIcons","regularIcons","solidIcons","sharpLightIcons","sharpIcons","sharpSolidIcons","duotoneIcons","thinIcons","Icon","defaultStyle"],"sources":["/home/orr/GitHub/Dabbetul-Arz/node_modules/@expo/vector-icons/src/createIconSetFromFontAwesome6.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport createMultiStyleIconSet from './createMultiStyleIconSet';\n\nconst FA6Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n  sharp: 'sharp',\n  sharpLight: 'sharpLight',\n  sharpSolid: 'sharpSolid',\n  duotone: 'duotone',\n  thin: 'thin',\n};\n\nfunction createFA6iconSet(glyphMap, metadata = {}, fonts, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome6${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    let family = style === 'brand' ? 'brands' : style;\n    family = style === 'sharpSolid' ? 'sharp-solid' : family;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n\n    const fontFile = fonts[styleName];\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n    }\n\n    if (styleName === 'Duotone') {\n      styleName = 'Solid';\n    }\n\n    styleName = styleName.replace('Sharp_', '');\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome6Brands');\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const sharpLightIcons = createFontAwesomeStyle('Sharp_Light', '300', 'FontAwesome6Sharp');\n  const sharpIcons = createFontAwesomeStyle('Sharp_Regular', '400', 'FontAwesome6Sharp');\n  const sharpSolidIcons = createFontAwesomeStyle('Sharp_Solid', '900', 'FontAwesome6Sharp');\n  const duotoneIcons = createFontAwesomeStyle('Duotone', '900', 'FontAwesome6Duotone');\n  const thinIcons = createFontAwesomeStyle('Thin', '100');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n      sharp: sharpIcons,\n      sharpLight: sharpLightIcons,\n      sharpSolid: sharpSolidIcons,\n      duotone: duotoneIcons,\n      thin: thinIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    }\n  );\n\n  return Icon;\n}\n\nexport { createFA6iconSet, FA6Style };\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}