{"ast":null,"code":"import React,{useEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import Platform from\"react-native-web/dist/exports/Platform\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{SafeAreaProvider,SafeAreaView}from'react-native-safe-area-context';import*as FileSystem from'expo-file-system';import{Asset}from'expo-asset';import useWindowDimensions from\"react-native-web/dist/exports/useWindowDimensions\";import{useVideoPlayer}from'expo-video';import useLockOrientation from'../hooks/useLockOrientation';import VideoWindow from'../components/VideoWindow';import{getPlayerStyles}from'../utils/getPlayerStyles';import{getThemeByName}from'../utils/theme';import{useNavigation}from'@react-navigation/native';import DigitalClock from'../components/DigitalClock';import TimeDisplay from'../components/TimeDisplay';import PlayerClock from'../components/PlayerClock';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const channelLogos={\"../assets/images/logos/mpl.png\":require(\"../../assets/images/logos/mpl.png\"),\"../assets/images/logos/nurtv.png\":require(\"../../assets/images/logos/nurtv.png\"),\"../assets/images/logos/hkhm.png\":require(\"../../assets/images/logos/hkhm.png\"),\"../assets/images/logos/hkhz.png\":require(\"../../assets/images/logos/hkhz.png\"),\"../assets/images/logos/klv7r.png\":require(\"../../assets/images/logos/klv7r.png\"),\"../assets/images/logos/ibrahimlive_de.png\":require(\"../../assets/images/logos/ibrahimlive_de.png\"),\"../assets/images/logos/ibrahimlive_en.png\":require(\"../../assets/images/logos/ibrahimlive_en.png\"),\"../assets/images/logos/ibrahimlive_ru.png\":require(\"../../assets/images/logos/ibrahimlive_ru.png\"),\"../assets/images/logos/ibrahimlive_ar.png\":require(\"../../assets/images/logos/ibrahimlive_ar.png\"),\"../assets/images/logos/ibrahimlive_ku.png\":require(\"../../assets/images/logos/ibrahimlive_ku.png\"),\"../assets/images/logos/ibrahimlive_fr.png\":require(\"../../assets/images/logos/ibrahimlive_fr.png\"),\"../assets/images/logos/ibrahimlive_es.png\":require(\"../../assets/images/logos/ibrahimlive_es.png\"),\"../assets/images/logos/ibrahimlive_zh.png\":require(\"../../assets/images/logos/ibrahimlive_zh.png\"),\"../assets/images/logos/ibrahimlive_bg.png\":require(\"../../assets/images/logos/ibrahimlive_bg.png\"),\"../assets/images/logos/ibrahimlive_nl.png\":require(\"../../assets/images/logos/ibrahimlive_nl.png\"),\"../assets/images/logos/ibrahimlive_fa.png\":require(\"../../assets/images/logos/ibrahimlive_fa.png\")};const flagIcons={\"de\":require(\"../../assets/images/logos/flags/flag-de.png\"),\"en\":require(\"../../assets/images/logos/flags/flag-en.png\"),\"ru\":require(\"../../assets/images/logos/flags/flag-ru.png\"),\"ar\":require(\"../../assets/images/logos/flags/flag-ar.png\"),\"ku\":require(\"../../assets/images/logos/flags/flag-ku.png\"),\"fr\":require(\"../../assets/images/logos/flags/flag-fr.png\"),\"es\":require(\"../../assets/images/logos/flags/flag-es.png\"),\"zh\":require(\"../../assets/images/logos/flags/flag-zh.png\"),\"bg\":require(\"../../assets/images/logos/flags/flag-bg.png\"),\"nl\":require(\"../../assets/images/logos/flags/flag-nl.png\"),\"fa\":require(\"../../assets/images/logos/flags/flag-fa.png\"),\"tr\":require(\"../../assets/images/logos/flags/flag-tr.png\")};const PlayerScreen=()=>{const[themeName]=useState(\"dark\");const theme=getThemeByName(themeName);const[channels,setChannels]=useState([]);const[currentChannel,setCurrentChannel]=useState(null);const dimensions=Dimensions.get('window');const isPortrait=dimensions.height>=dimensions.width;const videoWidth=isPortrait?dimensions.width:dimensions.width*0.7;const videoHeight=videoWidth/(16/9);const player=useVideoPlayer(currentChannel,player=>{if(player){player.loop=true;player.staysActiveInBackground=true;player.play();}});useLockOrientation();const videoDimensions=useWindowDimensions();const SYSTEM_TRAY_HEIGHT=48;const navigation=useNavigation();useEffect(()=>{loadPlaylist();},[]);const loadPlaylist=async()=>{try{let text;if(true){const assetUrl=require(\"../../assets/playlists/tv.m3u8\");text=await fetch(assetUrl).then(response=>response.text());}else{const asset=Asset.fromModule(require(\"../../assets/playlists/tv.m3u8\"));await asset.downloadAsync();const fileUri=asset.localUri||asset.uri;text=await FileSystem.readAsStringAsync(fileUri);}const lines=text.split(/\\r?\\n/);const loadedChannels=[];for(let i=0;i<lines.length;i++){if(lines[i].startsWith('#EXTINF:')){const info=lines[i];const title=info.substring(info.indexOf(',')+1).trim();const logoMatch=info.match(/tvg-logo=\"([^\"]+)\"/);const logo=logoMatch?logoMatch[1]:null;const uri=lines[i+1]?lines[i+1].trim():'';if(uri){loadedChannels.push({uri,metadata:{title,logo}});}}}setChannels(loadedChannels);if(loadedChannels.length>0){setCurrentChannel(loadedChannels[0]);}}catch(error){console.error(\"Ошибка при загрузке плейлиста:\",error);}};const windowHeight=videoDimensions.height;let channelListMaxHeight=windowHeight;if(isPortrait){channelListMaxHeight=windowHeight-videoHeight;}else{channelListMaxHeight=windowHeight-35;}const layoutWidths=isPortrait?{playerWidth:videoDimensions.width,listWidth:videoDimensions.width}:{playerWidth:false?videoDimensions.width*0.65:false?videoDimensions.width*0.64:videoDimensions.width*0.65,listWidth:false?videoDimensions.width*0.25:false?videoDimensions.width*0.35:videoDimensions.width*0.34};const handleChannelChange=channel=>{if(channel.uri!==currentChannel.uri){setCurrentChannel(channel);}};const styles=getPlayerStyles(theme,isPortrait,videoHeight);return _jsx(SafeAreaProvider,{children:_jsx(SafeAreaView,{style:styles.container,children:isPortrait?_jsxs(View,{style:{flex:1,flexDirection:'column'},children:[_jsx(View,{style:styles.videoContainer,children:currentChannel?_jsx(VideoWindow,{currentChannel:currentChannel,videoWidth:layoutWidths.playerWidth,videoHeight:videoHeight,player:player,controls:true}):_jsx(Text,{style:{color:theme.text,textAlign:\"center\",padding:10},children:\"Channels not loaded\"})}),_jsx(View,{style:styles.controls,children:currentChannel&&_jsx(View,{style:{alignItems:'center',justifyContent:'center',width:'100%'},children:_jsx(Text,{numberOfLines:1,ellipsizeMode:\"tail\",style:[styles.currentChannelText,{textAlign:'center'}],children:currentChannel.metadata.title})})}),channels.length>0&&_jsx(ScrollView,{style:true?{maxHeight:channelListMaxHeight,overflowY:'auto'}:{},contentContainerStyle:styles.channelList,children:channels.map((channel,index)=>_jsx(TouchableOpacity,{style:[styles.channelItem,channel.uri===currentChannel.uri&&styles.activeChannelItem],onPress:()=>handleChannelChange(channel),children:_jsxs(View,{style:styles.channelRow,children:[_jsx(View,{style:styles.leftIconContainer,children:channel.metadata.logo&&channelLogos[channel.metadata.logo]?_jsx(Image,{source:channelLogos[channel.metadata.logo],style:styles.iconStyle}):_jsx(Image,{source:require(\"../../assets/icon.png\"),style:styles.iconStyle})}),_jsx(View,{style:styles.middleTextContainer,children:_jsx(Text,{numberOfLines:1,ellipsizeMode:\"tail\",style:[styles.channelText,channel.uri===currentChannel.uri&&styles.activeChannelText],children:channel.metadata.title})}),_jsx(View,{style:styles.rightFlagContainer,children:(()=>{if(index<5){return _jsx(Image,{source:flagIcons[\"tr\"],style:styles.flagIconStyle});}const logoFilename=channel.metadata.logo;const match=logoFilename&&logoFilename.match(/ibrahimlive_([a-z]{2})\\.png$/i);if(match){const langCode=match[1].toLowerCase();if(flagIcons[langCode]){return _jsx(Image,{source:flagIcons[langCode],style:styles.flagIconStyle});}}return null;})()})]})},channel.uri))})]}):false?_jsxs(View,{style:{flex:1,flexDirection:'row',alignItems:'center'},children:[_jsx(View,{style:{flex:9,alignItems:'flex-start'},children:currentChannel?_jsx(VideoWindow,{currentChannel:currentChannel,videoWidth:videoDimensions.width*0.9,videoHeight:videoDimensions.height-SYSTEM_TRAY_HEIGHT,player:player,controls:true}):_jsx(Text,{style:{color:theme.text,textAlign:'center',padding:10},children:\"Channels not loaded\"})}),_jsx(View,{style:{flex:1,justifyContent:'flex-end',alignItems:'flex-end',paddingRight:10,paddingBottom:10},children:_jsx(PlayerClock,{})})]}):_jsxs(View,{style:styles.landscapeContainer,children:[_jsxs(View,{style:[styles.leftColumn,{width:layoutWidths.playerWidth}],children:[_jsx(View,{style:styles.landscapeVideoContainer,children:currentChannel?_jsx(VideoWindow,{currentChannel:currentChannel,videoWidth:layoutWidths.playerWidth,videoHeight:videoHeight,player:player,controls:true}):_jsx(Text,{style:{color:theme.text,textAlign:'center',padding:10},children:\"Channels not loaded\"})}),currentChannel&&_jsx(View,{style:styles.controls,children:_jsx(View,{style:{alignItems:'center',justifyContent:'center',width:'100%'},children:_jsx(Text,{numberOfLines:1,ellipsizeMode:\"tail\",style:[styles.currentChannelText,{textAlign:'center'}],children:currentChannel.metadata.title})})})]}),_jsx(View,{style:[styles.rightColumn,{width:layoutWidths.listWidth}],children:channels.length>0&&_jsx(ScrollView,{style:[styles.landscapeChannelList,{maxHeight:channelListMaxHeight,marginTop:20,marginBottom:20,overflowY:'auto'}],contentContainerStyle:[styles.channelList,styles.landscapeChannelListContainer,{flexGrow:1}],children:channels.map((channel,index)=>_jsx(TouchableOpacity,{style:[styles.channelItem,channel.uri===currentChannel.uri&&styles.activeChannelItem],onPress:()=>handleChannelChange(channel),children:_jsxs(View,{style:styles.channelRow,children:[_jsx(View,{style:styles.leftIconContainer,children:channel.metadata.logo&&channelLogos[channel.metadata.logo]?_jsx(Image,{source:channelLogos[channel.metadata.logo],style:styles.iconStyle}):_jsx(Image,{source:require(\"../../assets/icon.png\"),style:styles.iconStyle})}),_jsx(View,{style:styles.middleTextContainer,children:_jsx(Text,{numberOfLines:1,ellipsizeMode:\"tail\",style:[styles.channelText,channel.uri===currentChannel.uri&&styles.activeChannelText],children:channel.metadata.title})}),_jsx(View,{style:styles.rightFlagContainer,children:(()=>{if(index<5){return _jsx(Image,{source:flagIcons[\"tr\"],style:styles.flagIconStyle});}const logoFilename=channel.metadata.logo;const match=logoFilename&&logoFilename.match(/ibrahimlive_([a-z]{2})\\.png$/i);if(match){const langCode=match[1].toLowerCase();if(flagIcons[langCode]){return _jsx(Image,{source:flagIcons[langCode],style:styles.flagIconStyle});}}return null;})()})]})},channel.uri))})})]})})});};export default PlayerScreen;","map":{"version":3,"names":["React","useEffect","useState","StyleSheet","View","Text","ScrollView","TouchableOpacity","Image","Platform","Dimensions","SafeAreaProvider","SafeAreaView","FileSystem","Asset","useWindowDimensions","useVideoPlayer","useLockOrientation","VideoWindow","getPlayerStyles","getThemeByName","useNavigation","DigitalClock","TimeDisplay","PlayerClock","jsx","_jsx","jsxs","_jsxs","channelLogos","require","flagIcons","PlayerScreen","themeName","theme","channels","setChannels","currentChannel","setCurrentChannel","dimensions","get","isPortrait","height","width","videoWidth","videoHeight","player","loop","staysActiveInBackground","play","videoDimensions","SYSTEM_TRAY_HEIGHT","navigation","loadPlaylist","text","assetUrl","fetch","then","response","asset","fromModule","downloadAsync","fileUri","localUri","uri","readAsStringAsync","lines","split","loadedChannels","i","length","startsWith","info","title","substring","indexOf","trim","logoMatch","match","logo","push","metadata","error","console","windowHeight","channelListMaxHeight","layoutWidths","playerWidth","listWidth","handleChannelChange","channel","styles","children","style","container","flex","flexDirection","videoContainer","controls","color","textAlign","padding","alignItems","justifyContent","numberOfLines","ellipsizeMode","currentChannelText","maxHeight","overflowY","contentContainerStyle","channelList","map","index","channelItem","activeChannelItem","onPress","channelRow","leftIconContainer","source","iconStyle","middleTextContainer","channelText","activeChannelText","rightFlagContainer","flagIconStyle","logoFilename","langCode","toLowerCase","paddingRight","paddingBottom","landscapeContainer","leftColumn","landscapeVideoContainer","rightColumn","landscapeChannelList","marginTop","marginBottom","landscapeChannelListContainer","flexGrow"],"sources":["/home/orr/GitHub/Dabbetul-Arz/src/screens/PlayerScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  StyleSheet, View, Text, ScrollView, TouchableOpacity, Image, Platform, Dimensions \n} from 'react-native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport * as FileSystem from 'expo-file-system';\nimport { Asset } from 'expo-asset';\nimport { useWindowDimensions } from 'react-native';\nimport { useVideoPlayer } from 'expo-video';\nimport useLockOrientation from '../hooks/useLockOrientation';\nimport VideoWindow from '../components/VideoWindow';\nimport { getPlayerStyles } from '../utils/getPlayerStyles';\nimport { getThemeByName } from '../utils/theme';\nimport { useNavigation } from '@react-navigation/native';\nimport DigitalClock from '../components/DigitalClock';\nimport TimeDisplay from '../components/TimeDisplay';\nimport PlayerClock from '../components/PlayerClock';\n\n// Mapping путей к логотипам (обновлённые пути для расположения из папки screens)\nconst channelLogos = {\n  \"../assets/images/logos/mpl.png\": require(\"../../assets/images/logos/mpl.png\"),\n  \"../assets/images/logos/nurtv.png\": require(\"../../assets/images/logos/nurtv.png\"),\n  \"../assets/images/logos/hkhm.png\": require(\"../../assets/images/logos/hkhm.png\"),\n  \"../assets/images/logos/hkhz.png\": require(\"../../assets/images/logos/hkhz.png\"),\n  \"../assets/images/logos/klv7r.png\": require(\"../../assets/images/logos/klv7r.png\"),\n  \"../assets/images/logos/ibrahimlive_de.png\": require(\"../../assets/images/logos/ibrahimlive_de.png\"),\n  \"../assets/images/logos/ibrahimlive_en.png\": require(\"../../assets/images/logos/ibrahimlive_en.png\"),\n  \"../assets/images/logos/ibrahimlive_ru.png\": require(\"../../assets/images/logos/ibrahimlive_ru.png\"),\n  \"../assets/images/logos/ibrahimlive_ar.png\": require(\"../../assets/images/logos/ibrahimlive_ar.png\"),\n  \"../assets/images/logos/ibrahimlive_ku.png\": require(\"../../assets/images/logos/ibrahimlive_ku.png\"),\n  \"../assets/images/logos/ibrahimlive_fr.png\": require(\"../../assets/images/logos/ibrahimlive_fr.png\"),\n  \"../assets/images/logos/ibrahimlive_es.png\": require(\"../../assets/images/logos/ibrahimlive_es.png\"),\n  \"../assets/images/logos/ibrahimlive_zh.png\": require(\"../../assets/images/logos/ibrahimlive_zh.png\"),\n  \"../assets/images/logos/ibrahimlive_bg.png\": require(\"../../assets/images/logos/ibrahimlive_bg.png\"),\n  \"../assets/images/logos/ibrahimlive_nl.png\": require(\"../../assets/images/logos/ibrahimlive_nl.png\"),\n  \"../assets/images/logos/ibrahimlive_fa.png\": require(\"../../assets/images/logos/ibrahimlive_fa.png\"),\n};\n\n// Mapping для флаговых иконок (обновлённые пути)\nconst flagIcons = {\n  \"de\": require(\"../../assets/images/logos/flags/flag-de.png\"),\n  \"en\": require(\"../../assets/images/logos/flags/flag-en.png\"),\n  \"ru\": require(\"../../assets/images/logos/flags/flag-ru.png\"),\n  \"ar\": require(\"../../assets/images/logos/flags/flag-ar.png\"),\n  \"ku\": require(\"../../assets/images/logos/flags/flag-ku.png\"),\n  \"fr\": require(\"../../assets/images/logos/flags/flag-fr.png\"),\n  \"es\": require(\"../../assets/images/logos/flags/flag-es.png\"),\n  \"zh\": require(\"../../assets/images/logos/flags/flag-zh.png\"),\n  \"bg\": require(\"../../assets/images/logos/flags/flag-bg.png\"),\n  \"nl\": require(\"../../assets/images/logos/flags/flag-nl.png\"),\n  \"fa\": require(\"../../assets/images/logos/flags/flag-fa.png\"),\n  \"tr\": require(\"../../assets/images/logos/flags/flag-tr.png\"),\n};\n\n// Если требуется, функция для динамического импорта модуля expo-screen-orientation может быть здесь\n\nconst PlayerScreen = () => {\n  const [themeName] = useState(\"dark\");\n  const theme = getThemeByName(themeName);\n  const [channels, setChannels] = useState([]);\n  const [currentChannel, setCurrentChannel] = useState(null);\n\n  const dimensions = Dimensions.get('window');\n  const isPortrait = dimensions.height >= dimensions.width;\n  const videoWidth = isPortrait ? dimensions.width : dimensions.width * 0.7;\n  const videoHeight = videoWidth / (16 / 9);\n\n  const player = useVideoPlayer(currentChannel, (player) => {\n    if (player) {\n      player.loop = true;\n      player.staysActiveInBackground = true;\n      player.play();\n    }\n  });\n  \n  useLockOrientation();\n\n  const videoDimensions = useWindowDimensions();\n  const SYSTEM_TRAY_HEIGHT = 48; // Примерное значение высоты системного трейа, скорректируйте по необходимости\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    loadPlaylist();\n  }, []);\n\n  const loadPlaylist = async () => {\n    try {\n      let text;\n      if (Platform.OS === 'web') {\n        // Для web: require возвращает URL\n        const assetUrl = require(\"../../assets/playlists/tv.m3u8\");\n        text = await fetch(assetUrl).then(response => response.text());\n      } else {\n        const asset = Asset.fromModule(require(\"../../assets/playlists/tv.m3u8\"));\n        await asset.downloadAsync();\n        const fileUri = asset.localUri || asset.uri;\n        text = await FileSystem.readAsStringAsync(fileUri);\n      }\n      const lines = text.split(/\\r?\\n/);\n      const loadedChannels = [];\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i].startsWith('#EXTINF:')) {\n          const info = lines[i];\n          const title = info.substring(info.indexOf(',') + 1).trim();\n          const logoMatch = info.match(/tvg-logo=\"([^\"]+)\"/);\n          const logo = logoMatch ? logoMatch[1] : null;\n          const uri = lines[i + 1] ? lines[i + 1].trim() : '';\n          if (uri) {\n            loadedChannels.push({ uri, metadata: { title, logo } });\n          }\n        }\n      }\n      setChannels(loadedChannels);\n      if (loadedChannels.length > 0) {\n        setCurrentChannel(loadedChannels[0]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при загрузке плейлиста:\", error);\n    }\n  };\n\n  const windowHeight = videoDimensions.height;\n  let channelListMaxHeight = windowHeight;\n  if (isPortrait) {\n    channelListMaxHeight = windowHeight - videoHeight;\n  } else {\n    channelListMaxHeight = windowHeight - 35;\n  }\n\n  const layoutWidths = isPortrait \n    ? {\n        playerWidth: videoDimensions.width,\n        listWidth: videoDimensions.width,\n      }\n    : {\n        playerWidth: Platform.OS === 'ios'\n          ? videoDimensions.width * 0.65\n          : Platform.OS === 'android'\n            ? videoDimensions.width * 0.64\n            : videoDimensions.width * 0.65,\n        listWidth: Platform.OS === 'ios'\n          ? videoDimensions.width * 0.25\n          : Platform.OS === 'android'\n            ? videoDimensions.width * 0.35\n            : videoDimensions.width * 0.34,\n      };\n\n  const handleChannelChange = (channel) => {\n    if (channel.uri !== currentChannel.uri) {\n      setCurrentChannel(channel);\n    }\n  };\n\n  // Получаем стили из отдельной функции\n  const styles = getPlayerStyles(theme, isPortrait, videoHeight);\n\n  return (\n    <SafeAreaProvider>\n      <SafeAreaView style={styles.container}>\n        { isPortrait ? (\n          <View style={{ flex: 1, flexDirection: 'column' }}>\n            <View style={styles.videoContainer}>\n              {currentChannel ? (\n                <VideoWindow \n                  currentChannel={currentChannel}\n                  videoWidth={layoutWidths.playerWidth}\n                  videoHeight={videoHeight}\n                  player={player}\n                  controls={true}\n                />\n              ) : (\n                <Text style={{ color: theme.text, textAlign: \"center\", padding: 10 }}>\n                  Channels not loaded\n                </Text>\n              )}\n            </View>\n            <View style={styles.controls}>\n              {currentChannel && (\n                <View style={{ alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                  <Text\n                    numberOfLines={1}\n                    ellipsizeMode=\"tail\"\n                    style={[styles.currentChannelText, { textAlign: 'center' }]}\n                  >\n                    {currentChannel.metadata.title}\n                  </Text>\n                </View>\n              )}\n            </View>\n            {channels.length > 0 && (\n              <ScrollView \n                style={Platform.OS === 'web' ? { maxHeight: channelListMaxHeight, overflowY: 'auto' } : {}}\n                contentContainerStyle={styles.channelList}\n              >\n                {channels.map((channel, index) => (\n                  <TouchableOpacity \n                    key={channel.uri} \n                    style={[\n                      styles.channelItem,\n                      channel.uri === currentChannel.uri && styles.activeChannelItem\n                    ]}\n                    onPress={() => handleChannelChange(channel)}\n                  >\n                    <View style={styles.channelRow}>\n                      <View style={styles.leftIconContainer}>\n                        {channel.metadata.logo && channelLogos[channel.metadata.logo] ? (\n                          <Image source={channelLogos[channel.metadata.logo]} style={styles.iconStyle} />\n                        ) : (\n                          <Image source={require(\"../../assets/icon.png\")} style={styles.iconStyle} />\n                        )}\n                      </View>\n                      <View style={styles.middleTextContainer}>\n                        <Text\n                          numberOfLines={1}\n                          ellipsizeMode=\"tail\"\n                          style={[\n                            styles.channelText,\n                            channel.uri === currentChannel.uri && styles.activeChannelText\n                          ]}\n                        >\n                          {channel.metadata.title}\n                        </Text>\n                      </View>\n                      <View style={styles.rightFlagContainer}>\n                        {(() => {\n                          if (index < 5) {\n                            return (\n                              <Image source={flagIcons[\"tr\"]} style={styles.flagIconStyle} />\n                            );\n                          }\n                          const logoFilename = channel.metadata.logo;\n                          const match = logoFilename && logoFilename.match(/ibrahimlive_([a-z]{2})\\.png$/i);\n                          if (match) {\n                            const langCode = match[1].toLowerCase();\n                            if (flagIcons[langCode]) {\n                              return (\n                                <Image source={flagIcons[langCode]} style={styles.flagIconStyle} />\n                              );\n                            }\n                          }\n                          return null;\n                        })()}\n                      </View>\n                    </View>\n                  </TouchableOpacity>\n                ))}\n              </ScrollView>\n            )}\n          </View>\n        ) : (\n          Platform.OS !== 'web' ? (\n            <View style={{ flex: 1, flexDirection: 'row', alignItems: 'center' }}>\n              <View style={{ flex: 9, alignItems: 'flex-start' }}>\n                {currentChannel ? (\n                  <VideoWindow \n                    currentChannel={currentChannel}\n                    videoWidth={videoDimensions.width * 0.9}\n                    videoHeight={videoDimensions.height - SYSTEM_TRAY_HEIGHT}\n                    player={player}\n                    controls={true}\n                  />\n                ) : (\n                  <Text style={{ \n                    color: theme.text, \n                    textAlign: 'center', \n                    padding: 10\n                  }}>\n                    Channels not loaded\n                  </Text>\n                )}\n              </View>\n              <View style={{ flex: 1, justifyContent: 'flex-end', alignItems: 'flex-end', paddingRight: 10, paddingBottom: 10 }}>\n                <PlayerClock />\n              </View>\n            </View>\n          ) : (\n            <View style={styles.landscapeContainer}>\n              <View style={[styles.leftColumn, { width: layoutWidths.playerWidth }]}>\n                <View style={styles.landscapeVideoContainer}>\n                  {currentChannel ? (\n                    <VideoWindow \n                      currentChannel={currentChannel}\n                      videoWidth={layoutWidths.playerWidth}\n                      videoHeight={videoHeight}\n                      player={player}\n                      controls={true}\n                    />\n                  ) : (\n                    <Text style={{ \n                      color: theme.text, \n                      textAlign: 'center', \n                      padding: 10\n                    }}>\n                      Channels not loaded\n                    </Text>\n                  )}\n                </View>\n                {currentChannel && (\n                  <View style={styles.controls}>\n                    <View style={{ alignItems: 'center', justifyContent: 'center', width: '100%' }}>\n                      <Text\n                        numberOfLines={1}\n                        ellipsizeMode=\"tail\"\n                        style={[styles.currentChannelText, { textAlign: 'center' }]}\n                      >\n                        {currentChannel.metadata.title}\n                      </Text>\n                    </View>\n                  </View>\n                )}\n              </View>\n              <View style={[styles.rightColumn, { width: layoutWidths.listWidth }]}>\n                {channels.length > 0 && (\n                  <ScrollView\n                    style={[\n                      styles.landscapeChannelList,\n                      {\n                        maxHeight: channelListMaxHeight,\n                        marginTop: 20,\n                        marginBottom: 20,\n                        overflowY: 'auto'\n                      }\n                    ]}\n                    contentContainerStyle={[\n                      styles.channelList,\n                      styles.landscapeChannelListContainer,\n                      { flexGrow: 1 }\n                    ]}\n                  >\n                    {channels.map((channel, index) => (\n                      <TouchableOpacity\n                        key={channel.uri}\n                        style={[\n                          styles.channelItem,\n                          channel.uri === currentChannel.uri && styles.activeChannelItem\n                        ]}\n                        onPress={() => handleChannelChange(channel)}\n                      >\n                        <View style={styles.channelRow}>\n                          <View style={styles.leftIconContainer}>\n                            {channel.metadata.logo && channelLogos[channel.metadata.logo] ? (\n                              <Image source={channelLogos[channel.metadata.logo]} style={styles.iconStyle} />\n                            ) : (\n                              <Image source={require(\"../../assets/icon.png\")} style={styles.iconStyle} />\n                            )}\n                          </View>\n                          <View style={styles.middleTextContainer}>\n                            <Text\n                              numberOfLines={1}\n                              ellipsizeMode=\"tail\"\n                              style={[\n                                styles.channelText,\n                                channel.uri === currentChannel.uri && styles.activeChannelText\n                              ]}\n                            >\n                              {channel.metadata.title}\n                            </Text>\n                          </View>\n                          <View style={styles.rightFlagContainer}>\n                            {(() => {\n                              if (index < 5) {\n                                return <Image source={flagIcons[\"tr\"]} style={styles.flagIconStyle} />;\n                              }\n                              const logoFilename = channel.metadata.logo;\n                              const match = logoFilename && logoFilename.match(/ibrahimlive_([a-z]{2})\\.png$/i);\n                              if (match) {\n                                const langCode = match[1].toLowerCase();\n                                if (flagIcons[langCode]) {\n                                  return <Image source={flagIcons[langCode]} style={styles.flagIconStyle} />;\n                                }\n                              }\n                              return null;\n                            })()}\n                          </View>\n                        </View>\n                      </TouchableOpacity>\n                    ))}\n                  </ScrollView>\n                )}\n              </View>\n            </View>\n          )\n        )}\n      </SafeAreaView>\n    </SafeAreaProvider>\n  );\n};\n\nexport default PlayerScreen; "],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}