{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"id\",\"initialRouteName\",\"children\",\"layout\",\"screenListeners\",\"screenOptions\",\"screenLayout\",\"UNSTABLE_getStateForRouteNamesChange\"];import{createNavigatorFactory,StackActions,StackRouter,useLocale,useNavigationBuilder}from'@react-navigation/native';import*as React from'react';import{StackView}from\"../views/Stack/StackView.js\";import{jsx as _jsx}from\"react/jsx-runtime\";function StackNavigator(_ref){let{id,initialRouteName,children,layout,screenListeners,screenOptions,screenLayout,UNSTABLE_getStateForRouteNamesChange}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const{direction}=useLocale();const{state,describe,descriptors,navigation,NavigationContent}=useNavigationBuilder(StackRouter,{id,initialRouteName,children,layout,screenListeners,screenOptions,screenLayout,UNSTABLE_getStateForRouteNamesChange});React.useEffect(()=>navigation.addListener?.('tabPress',e=>{const isFocused=navigation.isFocused();requestAnimationFrame(()=>{if(state.index>0&&isFocused&&!e.defaultPrevented){navigation.dispatch(Object.assign({},StackActions.popToTop(),{target:state.key}));}});}),[navigation,state.index,state.key]);return _jsx(NavigationContent,{children:_jsx(StackView,Object.assign({},rest,{direction:direction,state:state,describe:describe,descriptors:descriptors,navigation:navigation}))});}export function createStackNavigator(config){return createNavigatorFactory(StackNavigator)(config);}","map":{"version":3,"names":["createNavigatorFactory","StackActions","StackRouter","useLocale","useNavigationBuilder","React","StackView","jsx","_jsx","StackNavigator","_ref","id","initialRouteName","children","layout","screenListeners","screenOptions","screenLayout","UNSTABLE_getStateForRouteNamesChange","rest","_objectWithoutPropertiesLoose","_excluded","direction","state","describe","descriptors","navigation","NavigationContent","useEffect","addListener","e","isFocused","requestAnimationFrame","index","defaultPrevented","dispatch","Object","assign","popToTop","target","key","createStackNavigator","config"],"sources":["/home/orr/GitHub/Dabbetul-Arz/node_modules/@react-navigation/stack/src/navigators/createStackNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  type EventArg,\n  type NavigatorTypeBagBase,\n  type ParamListBase,\n  type StackActionHelpers,\n  StackActions,\n  type StackNavigationState,\n  StackRouter,\n  type StackRouterOptions,\n  type StaticConfig,\n  type TypedNavigator,\n  useLocale,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  StackNavigationEventMap,\n  StackNavigationOptions,\n  StackNavigationProp,\n  StackNavigatorProps,\n} from '../types';\nimport { StackView } from '../views/Stack/StackView';\n\nfunction StackNavigator({\n  id,\n  initialRouteName,\n  children,\n  layout,\n  screenListeners,\n  screenOptions,\n  screenLayout,\n  UNSTABLE_getStateForRouteNamesChange,\n  ...rest\n}: StackNavigatorProps) {\n  const { direction } = useLocale();\n\n  const { state, describe, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      StackNavigationState<ParamListBase>,\n      StackRouterOptions,\n      StackActionHelpers<ParamListBase>,\n      StackNavigationOptions,\n      StackNavigationEventMap\n    >(StackRouter, {\n      id,\n      initialRouteName,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n      screenLayout,\n      UNSTABLE_getStateForRouteNamesChange,\n    });\n\n  React.useEffect(\n    () =>\n      // @ts-expect-error: there may not be a tab navigator in parent\n      navigation.addListener?.('tabPress', (e) => {\n        const isFocused = navigation.isFocused();\n\n        // Run the operation in the next frame so we're sure all listeners have been run\n        // This is necessary to know if preventDefault() has been called\n        requestAnimationFrame(() => {\n          if (\n            state.index > 0 &&\n            isFocused &&\n            !(e as unknown as EventArg<'tabPress', true>).defaultPrevented\n          ) {\n            // When user taps on already focused tab and we're inside the tab,\n            // reset the stack to replicate native behaviour\n            navigation.dispatch({\n              ...StackActions.popToTop(),\n              target: state.key,\n            });\n          }\n        });\n      }),\n    [navigation, state.index, state.key]\n  );\n\n  return (\n    <NavigationContent>\n      <StackView\n        {...rest}\n        direction={direction}\n        state={state}\n        describe={describe}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport function createStackNavigator<\n  const ParamList extends ParamListBase,\n  const NavigatorID extends string | undefined = undefined,\n  const TypeBag extends NavigatorTypeBagBase = {\n    ParamList: ParamList;\n    NavigatorID: NavigatorID;\n    State: StackNavigationState<ParamList>;\n    ScreenOptions: StackNavigationOptions;\n    EventMap: StackNavigationEventMap;\n    NavigationList: {\n      [RouteName in keyof ParamList]: StackNavigationProp<\n        ParamList,\n        RouteName,\n        NavigatorID\n      >;\n    };\n    Navigator: typeof StackNavigator;\n  },\n  const Config extends StaticConfig<TypeBag> = StaticConfig<TypeBag>,\n>(config?: Config): TypedNavigator<TypeBag, Config> {\n  return createNavigatorFactory(StackNavigator)(config);\n}\n"],"mappings":"kQAAA,OACEA,sBAAsB,CAKtBC,YAAY,CAEZC,WAAW,CAIXC,SAAS,CACTC,oBAAoB,KACf,0BAA0B,CACjC,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAQ9B,OAASC,SAAS,KAAQ,6BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,QAAS,CAAAC,cAAcA,CAAAC,IAAA,CAUC,IAVA,CACtBC,EAAE,CACFC,gBAAgB,CAChBC,QAAQ,CACRC,MAAM,CACNC,eAAe,CACfC,aAAa,CACbC,YAAY,CACZC,oCAEmB,CAAC,CAAAR,IAAA,CADjBS,IAAA,CAAAC,6BAAA,CAAAV,IAAA,CAAAW,SAAA,EAEH,KAAM,CAAEC,SAAU,CAAC,CAAGnB,SAAS,CAAC,CAAC,CAEjC,KAAM,CAAEoB,KAAK,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,UAAU,CAAEC,iBAAkB,CAAC,CACnEvB,oBAAoB,CAMlBF,WAAW,CAAE,CACbS,EAAE,CACFC,gBAAgB,CAChBC,QAAQ,CACRC,MAAM,CACNC,eAAe,CACfC,aAAa,CACbC,YAAY,CACZC,oCACF,CAAC,CAAC,CAEJb,KAAK,CAACuB,SAAS,CACb,IAEEF,UAAU,CAACG,WAAW,GAAG,UAAU,CAAGC,CAAC,EAAK,CAC1C,KAAM,CAAAC,SAAS,CAAGL,UAAU,CAACK,SAAS,CAAC,CAAC,CAIxCC,qBAAqB,CAAC,IAAM,CAC1B,GACET,KAAK,CAACU,KAAK,CAAG,CAAC,EACfF,SAAS,EACT,CAAED,CAAC,CAA2CI,gBAAgB,CAC9D,CAGAR,UAAU,CAACS,QAAQ,CAAAC,MAAA,CAAAC,MAAA,IACdpC,YAAY,CAACqC,QAAQ,CAAC,CAAC,EAC1BC,MAAM,CAAEhB,KAAK,CAACiB,GAAA,EACf,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAACd,UAAU,CAAEH,KAAK,CAACU,KAAK,CAAEV,KAAK,CAACiB,GAAG,CACrC,CAAC,CAED,MACE,CAAAhC,IAAA,CAACmB,iBAAiB,EAAAd,QAAA,CAChBL,IAAA,CAACF,SAAS,CAAA8B,MAAA,CAAAC,MAAA,IACJlB,IAAI,EACRG,SAAS,CAAEA,SAAU,CACrBC,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBC,WAAW,CAAEA,WAAY,CACzBC,UAAU,CAAEA,UAAA,EACb,CAAC,CACe,CAAC,CAExB,CAEA,MAAO,SAAS,CAAAe,oBAAoBA,CAmBlCC,MAAe,CAAmC,CAClD,MAAO,CAAA1C,sBAAsB,CAACS,cAAc,CAAC,CAACiC,MAAM,CAAC,CACvD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}